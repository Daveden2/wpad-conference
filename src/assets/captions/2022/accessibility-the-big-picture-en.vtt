WEBVTT

00:00:30.010 --> 00:00:33.830
AMBER HINDS: Now we are going
to have a video from Kelin Chauhan.

00:00:33.830 --> 00:00:38.100
He will be talking about
Accessibility: The Big Picture,

00:00:38.100 --> 00:00:41.120
starting out with learning
accessibility can be overwhelming,

00:00:41.120 --> 00:00:42.970
and there’s a ton of information.

00:00:42.970 --> 00:00:47.000
His video will talk about where
you can get started with that

00:00:47.000 --> 00:00:50.500
and help you navigate
through the learning process.

00:00:50.500 --> 00:00:54.450
Kelin has been working in
WordPress in front-end development

00:00:54.450 --> 00:00:56.180
for almost five years.

00:00:56.180 --> 00:01:01.810
He's currently working at rtCamp,
a WordPress VIP-gold agency partner

00:01:01.810 --> 00:01:05.480
where he's had the chance to work
with multiple enterprise clients.

00:01:05.480 --> 00:01:09.630
Kelin found his interest in the
world of web accessibility recently

00:01:09.630 --> 00:01:13.020
through one of those
clients, and that exposure

00:01:13.020 --> 00:01:16.860
to accessibility has helped shape
his perception towards the importance

00:01:16.860 --> 00:01:21.030
of inclusivity, and how a developer
can make changes in their mindset

00:01:21.030 --> 00:01:24.030
to include accessibility
at the time of development.

00:01:24.030 --> 00:01:28.030
Kelin is here and is available
if you want to speak with Kelin

00:01:28.030 --> 00:01:32.020
or ask him any questions in
the idea section in the chat.

00:01:35.750 --> 00:01:37.520
KELIN CHAUHAN: Hey,
everyone, how's it going?

00:01:37.520 --> 00:01:39.250
How are you doing today?

00:01:39.250 --> 00:01:42.470
My name is Kelin, and welcome
to this lightning session.

00:01:42.470 --> 00:01:46.460
This lightning session is called
Accessibility: The Big Picture.

00:01:46.460 --> 00:01:51.480
And before we talk about the things
we are discussion in this talk,

00:01:51.480 --> 00:01:54.270
let's talk a little
bit about who am I.

00:01:54.270 --> 00:01:55.720
My name is Kelin Chauhan.

00:01:55.720 --> 00:01:58.540
I am a web developer
based out of India.

00:01:58.540 --> 00:02:02.300
I have been working in front end
as well as WordPress development

00:02:02.300 --> 00:02:04.620
almost five years now.

00:02:04.620 --> 00:02:06.630
Currently, I'm working with rtCamp.

00:02:06.630 --> 00:02:09.670
RtCamp is a WordPress
VIP-Gold agency partner.

00:02:11.220 --> 00:02:14.720
Around last year through rtCamp
I had this opportunity work

00:02:14.720 --> 00:02:18.650
with one of the clients who were
working on enhancing accessibility

00:02:18.650 --> 00:02:20.070
for the website.

00:02:20.070 --> 00:02:23.750
That is when I have to take a
deeper dive into this topic,

00:02:23.750 --> 00:02:29.100
and I have to learn how to implement
accessibility-friendly websites.

00:02:29.100 --> 00:02:32.880
And it was overwhelming at
first because I did not know

00:02:32.880 --> 00:02:34.400
where to start from.

00:02:34.400 --> 00:02:37.150
When you start out with
learning about this topic,

00:02:37.150 --> 00:02:39.550
it can be a little bit
overwhelming at first.

00:02:39.550 --> 00:02:46.320
This session is about giving
you a mental model, a blueprint

00:02:46.320 --> 00:02:51.140
so you can approach this
topic in a structural manner.

00:02:51.140 --> 00:02:55.360
If you're a developer, you will be
able to see what accessibility is

00:02:55.360 --> 00:02:58.150
and you will also be able
to see what kind of things

00:02:58.150 --> 00:02:59.970
that you are going to
be doing as a developer

00:02:59.970 --> 00:03:03.030
for implementing accessibility
friendly websites.

00:03:03.030 --> 00:03:04.760
You will be able to see
what kind of changes

00:03:04.760 --> 00:03:07.460
in practices you need to
make, and what kind of changes

00:03:07.460 --> 00:03:10.330
in your mindset that you need
to make in order to make sure

00:03:10.330 --> 00:03:11.320
that you are containing [phonetic]

00:03:11.320 --> 00:03:14.120
accessibility at the
time of development.

00:03:14.120 --> 00:03:16.730
And if you are a product
manager or project manager,

00:03:16.730 --> 00:03:20.110
then you will be able to see the
technical side of this aspect.

00:03:21.240 --> 00:03:23.120
Let’s jump right into it.

00:03:23.120 --> 00:03:25.340
Accessibility, what is it?

00:03:25.340 --> 00:03:28.720
Accessibility is the practice
of making your websites usable

00:03:28.720 --> 00:03:30.880
by as many people as possible.

00:03:30.880 --> 00:03:33.344
Now, this is not a
standard definition

00:03:33.345 --> 00:03:35.240
of what web accessibility is,

00:03:35.240 --> 00:03:37.930
but it is something that
made a lot of sense to me

00:03:37.930 --> 00:03:41.090
because the kinds of
things you would be doing

00:03:41.090 --> 00:03:45.070
in order to make accessibility
friendly websites would mean

00:03:45.070 --> 00:03:48.460
that the website usability
is going to be optimal,

00:03:48.460 --> 00:03:52.940
and that it's going to be usable
by as many people as possible.

00:03:52.940 --> 00:03:54.500
Let's talk a little bit about that.

00:03:54.500 --> 00:03:57.650
Let's talk a little bit about
what do we mean when we say,

00:03:57.650 --> 00:04:00.560
usable by as many
people as possible.

00:04:00.560 --> 00:04:03.940
Different users have different
needs depending on their situation

00:04:03.940 --> 00:04:07.900
to be able to consume content
on the Internet efficiently.

00:04:07.900 --> 00:04:10.300
So, the different situations,
such as let's see say

00:04:10.300 --> 00:04:13.600
that there is a user
who is not able to see,

00:04:13.600 --> 00:04:16.440
or the user can only partially see.

00:04:16.440 --> 00:04:19.890
In such a situation the user
would be using assisted tools

00:04:19.890 --> 00:04:21.880
called screen readers.

00:04:21.880 --> 00:04:26.420
Screen readers are the topic
of this session, mainly,

00:04:26.420 --> 00:04:30.960
but there are different tools
depending on different situations

00:04:30.960 --> 00:04:33.690
and needs that the
user may be using.

00:04:33.690 --> 00:04:37.110
I encourage you to take a look
into those tools and take a look

00:04:37.110 --> 00:04:40.060
into how they are
used in your own time,

00:04:40.060 --> 00:04:41.720
but because this is a
lightning session, we are going

00:04:41.720 --> 00:04:43.990
to be only focusing
on screen readers.

00:04:43.990 --> 00:04:46.870
You can find information about
these tools and how they are used

00:04:46.870 --> 00:04:49.430
on W3C’s documentation.

00:04:49.430 --> 00:04:54.750
When we are talking about different
situations, it can be also

00:04:54.750 --> 00:04:57.230
for temporary situations,
for instance let's say

00:04:57.230 --> 00:04:59.690
that your mouse stops working
or the [unintelligible ]

00:04:59.690 --> 00:05:01.780
of your laptop stops working.

00:05:01.780 --> 00:05:05.320
In such a situation you would be
entirely relying on your keyboard

00:05:05.320 --> 00:05:07.090
to interact with your website.

00:05:07.090 --> 00:05:10.290
And if your website has not
been developed considering

00:05:10.290 --> 00:05:12.980
these different needs
and situations in mind,

00:05:12.980 --> 00:05:16.930
then you may not be providing
the optimal experience

00:05:16.930 --> 00:05:18.900
that your users deserve.

00:05:18.900 --> 00:05:21.420
Accessibility is about that.

00:05:21.420 --> 00:05:25.830
Accessibility is about considering
these various users and needs

00:05:25.830 --> 00:05:31.050
and these different situations and
developing so that you are ensuring

00:05:31.050 --> 00:05:34.930
that the user experience that
your website provides is optimal.

00:05:35.379 --> 00:05:36.199
All right.

00:05:37.590 --> 00:05:39.920
Let's take a look into
what are screen readers.

00:05:39.920 --> 00:05:43.501
Screen readers are a form
of assistive technology

00:05:43.502 --> 00:05:47.800
that renders text
or image as speech or braille.

00:05:49.030 --> 00:05:51.880
Usually screen readers are a
piece of software that are built

00:05:51.880 --> 00:05:53.600
into your operating system.

00:05:53.600 --> 00:05:58.190
For instance, on Mac or iOS,
and iPadOS we have VoiceOver.

00:05:58.190 --> 00:06:01.680
In Windows we have Narrator and
in Android we have TalkBack.

00:06:02.920 --> 00:06:06.210
Before we go further and talk
about the technical [lead ends]

00:06:06.210 --> 00:06:11.530
of how screen readers work, I want
to show you this quick video clip

00:06:11.530 --> 00:06:15.860
that will show you what
kind of experience is it

00:06:15.860 --> 00:06:20.200
to use a screen reader, and how a
user actually uses a screen reader.

00:06:20.200 --> 00:06:22.249
So, let me play this clip for you.

00:06:23.516 --> 00:06:23.670
[video clip playing]

00:06:23.670 --> 00:06:27.590
SCREEN READER: List two items,
link, skip to main contact, link,

00:06:27.590 --> 00:06:31.670
skip to search, visited
link, image, MDN home page,

00:06:31.670 --> 00:06:35.430
main menu navigation,
list three items, link, reference,

00:06:35.430 --> 00:06:38.400
headings menu, heading level,
heading level, heading,

00:06:38.400 --> 00:06:41.100
heading level three, link,
introducing the CSS Cascade.

00:06:42.850 --> 00:06:46.460
KELIN: As you saw in this video
clip that the screen reader

00:06:46.460 --> 00:06:50.010
starts reading content on the
screen from the top of the screen

00:06:50.010 --> 00:06:52.630
and moves all the way to
the bottom of the screen.

00:06:52.630 --> 00:06:56.450
And along the way it reads about
the content that it encounters

00:06:56.450 --> 00:06:58.138
on the screen, and it, also,

00:06:58.139 --> 00:07:00.610
announces about the
underlining meaning

00:07:00.610 --> 00:07:04.200
of that content and of
supporting information.

00:07:04.200 --> 00:07:07.890
For example, if it's a button,
then screen reader will be announcing

00:07:07.890 --> 00:07:10.910
that this is a button and
that it has an action,

00:07:10.910 --> 00:07:13.767
and that it can be
triggered by clicking on it.

00:07:13.767 --> 00:07:14.401
All right.

00:07:15.310 --> 00:07:19.450
Let's take a look into
how screen readers work.

00:07:19.450 --> 00:07:22.610
The way the screen readers
work is by creating something

00:07:22.610 --> 00:07:24.730
called Accessibility API.

00:07:24.730 --> 00:07:28.330
Accessibility APIs are a piece
of software you can think of

00:07:28.330 --> 00:07:33.580
or an API that your
operating system provides,

00:07:33.580 --> 00:07:38.410
and screen readers they create
this Accessibility API for knowing

00:07:38.410 --> 00:07:40.240
what’s on the screen.

00:07:40.240 --> 00:07:44.060
How does Accessibility API
know what’s on your webpage.

00:07:44.060 --> 00:07:47.020
For that there’s something
called Accessibility Tree.

00:07:47.020 --> 00:07:50.740
An Accessibility Tree is something
that your browser generates based

00:07:50.740 --> 00:07:53.780
on your webpage, and it contains
information on about what is

00:07:53.780 --> 00:07:57.540
on your webpage, and it also
contains some structural information

00:07:57.540 --> 00:08:01.340
and some meaningful information
such as if it is a button,

00:08:01.340 --> 00:08:04.150
then it's clickable
and so on and so forth.

00:08:04.150 --> 00:08:08.270
The way it works is that screen
readers create the Accessibility API.

00:08:08.270 --> 00:08:13.350
And Accessibility API they create
or consume Accessibility Tree

00:08:13.350 --> 00:08:16.830
from the browser, and that is
how your screen reader knows

00:08:16.830 --> 00:08:19.140
what is on the screen and
what is on your webpage.

00:08:20.330 --> 00:08:22.940
This means that if
you want to make sure

00:08:22.940 --> 00:08:27.010
that the accessibility experience
of your website is optimal,

00:08:27.010 --> 00:08:30.530
then you want to make sure
that the Accessibility Tree

00:08:30.530 --> 00:08:34.330
that your page generates,
is optimal and has useful

00:08:34.330 --> 00:08:35.680
and rich information in it.

00:08:37.340 --> 00:08:40.250
Accessibility Tree is a
really important aspect

00:08:40.250 --> 00:08:43.580
of accessibility experience.

00:08:43.580 --> 00:08:49.440
It would be nice if you could
interact with this tree and add data,

00:08:49.440 --> 00:08:51.540
helpful information into it, right.

00:08:51.540 --> 00:08:54.170
There is no direct
way of doing that yet,

00:08:54.170 --> 00:08:56.510
but there are indirect
ways of doing that.

00:08:56.510 --> 00:09:01.930
The indirect ways are one, by using
something called Semantic HTML.

00:09:01.930 --> 00:09:04.570
This means that in order to
render some of the contact

00:09:04.570 --> 00:09:07.540
on the page you will be
using the most optimal tag

00:09:07.540 --> 00:09:09.780
that can represent
that information.

00:09:09.780 --> 00:09:13.360
For instance, if you have a
heading, you will be using H1

00:09:13.360 --> 00:09:16.660
so that screen readers would know
that this is a level one heading.

00:09:16.660 --> 00:09:20.720
This is how Semantic HTML gives
some more extra information

00:09:20.720 --> 00:09:24.370
to such tools so they can
announce more helpful contact

00:09:24.370 --> 00:09:29.660
and some context to the screen reader
users and assist to those users.

00:09:29.660 --> 00:09:32.740
We will be taking a
look into that more.

00:09:32.740 --> 00:09:36.640
Let's take a look into the other way
which is ARIA Attributes and Roles.

00:09:36.640 --> 00:09:40.620
ARIA Attributes and Roles
in itself is a bigger topic

00:09:40.620 --> 00:09:42.690
but for the purpose of
this lightning session,

00:09:42.690 --> 00:09:44.860
let me give you a small example.

00:09:44.860 --> 00:09:48.110
For instance, let's say that
you have a drop-down menu.

00:09:48.110 --> 00:09:50.400
The drop-down menu has stayed.

00:09:50.400 --> 00:09:53.040
It can be opened,
or it can be closed.

00:09:53.040 --> 00:09:57.220
How do you tell such
tools what is the state

00:09:57.220 --> 00:10:00.340
of the application currently or
the drop-down menu currently?

00:10:00.340 --> 00:10:05.270
How do you tell the screen reader,
is it opened or is it closed?

00:10:05.270 --> 00:10:08.740
You can do that by using
something called ARIA Expanded.

00:10:08.740 --> 00:10:13.790
It's an ARIA Attribute and its value
can be set to either true or false.

00:10:13.790 --> 00:10:15.560
If the value is
true, then that means

00:10:15.560 --> 00:10:18.330
that the screen reader would
now know that the current state

00:10:18.330 --> 00:10:20.150
of this menu is open.

00:10:20.150 --> 00:10:23.620
And if the value is false,
then the screen readers now know

00:10:23.620 --> 00:10:27.230
that the current state
of this menu is closed.

00:10:27.230 --> 00:10:30.770
And depending on when
the user drags the menu,

00:10:30.770 --> 00:10:32.870
you would be writing
JavaScript code,

00:10:32.870 --> 00:10:35.110
so that you can update
the attribute’s value,

00:10:35.110 --> 00:10:37.580
so it reflects the correct state.

00:10:37.580 --> 00:10:40.230
That is one way how
ARIA Attributes can help

00:10:40.230 --> 00:10:45.070
in providing such stateful
information to screen readers

00:10:45.070 --> 00:10:46.540
and assistive tools.

00:10:46.540 --> 00:10:48.510
Depending on the different
situation and the kind

00:10:48.510 --> 00:10:50.630
of information you want
to give to the user,

00:10:50.630 --> 00:10:53.730
you would be using the
combination of Semantic HTML

00:10:53.730 --> 00:10:56.200
along with ARIA
Attributes and Roles.

00:10:56.200 --> 00:11:00.760
Let's take a look into the
example of how Semantic HTML helps

00:11:00.760 --> 00:11:05.690
in creating the user
experience for assistive tools.

00:11:05.690 --> 00:11:07.520
On this slide we
have a screen shot.

00:11:07.520 --> 00:11:11.540
On the left-hand side we
have a snapshot of HTML.

00:11:11.540 --> 00:11:15.080
And as you can see this
HTML is not really semantic.

00:11:15.080 --> 00:11:18.630
It has a lot of divisions in
it, and as a result you can see

00:11:18.630 --> 00:11:22.480
on the right-hand side that the
resulting Accessibility Tree

00:11:22.480 --> 00:11:24.680
is not really well structured.

00:11:24.680 --> 00:11:27.590
By the way you can take a look
at this Accessibility Tree

00:11:27.590 --> 00:11:31.180
from your browser’s
developer console.

00:11:31.180 --> 00:11:33.000
Most of the browsers
provide you to look

00:11:33.000 --> 00:11:36.960
into the Accessibility Tree
that the page generates.

00:11:36.960 --> 00:11:38.710
You can see that it is not
really well structured.

00:11:38.710 --> 00:11:42.000
It's really difficult to understand
which link belongs to which text

00:11:42.000 --> 00:11:44.650
and which image belongs to which
text and so on and so forth.

00:11:44.650 --> 00:11:46.710
It’s confusing.

00:11:46.710 --> 00:11:51.000
Now, let's take a look at what
happens when you update this HTML

00:11:51.000 --> 00:11:52.840
and make it semantic.

00:11:52.840 --> 00:11:56.830
In this next slide I have
highlighted the piece of tags

00:11:56.830 --> 00:12:01.370
that has been updated to use
the semantic HTML tags instead.

00:12:01.370 --> 00:12:07.780
In here I have the wrapper division
into ul and the child divisions

00:12:07.780 --> 00:12:13.950
into li elements and the title
has been written now into h3 tag.

00:12:13.950 --> 00:12:17.200
Now you can see that the
resulting Accessibility Tree

00:12:17.200 --> 00:12:19.670
is very-well formatted in a way.

00:12:19.670 --> 00:12:22.250
You can see that there is one
list and one, two, three, four,

00:12:22.250 --> 00:12:23.760
five list items.

00:12:23.760 --> 00:12:28.910
This means when screen readers
consume this Accessibility Tree

00:12:28.910 --> 00:12:34.040
via Accessibility API, they can
now tell that there is a list,

00:12:34.040 --> 00:12:36.860
and they can announce that there
is a list, and they can announce

00:12:36.860 --> 00:12:41.460
that there are one, two, three,
four, five list items on the list.

00:12:41.460 --> 00:12:43.306
Now screen readers can, also,

00:12:43.307 --> 00:12:45.980
announce when they
reach this list item,

00:12:45.980 --> 00:12:49.390
they can announce that this
is list item one of five.

00:12:49.390 --> 00:12:53.950
That way the screen reader user now
knows in which list item they are on.

00:12:53.950 --> 00:12:56.359
Now the screen readers
can also announce

00:12:56.360 --> 00:12:59.840
when the list item is starting,
and when the list item is ending.

00:12:59.840 --> 00:13:01.720
That way the screen
reader would know,

00:13:01.720 --> 00:13:04.780
and the screen reader user would
know that all the information

00:13:04.780 --> 00:13:09.890
that was open between these two was
relating to the same information

00:13:09.890 --> 00:13:11.540
or same entity.

00:13:11.540 --> 00:13:17.770
Now, the other thing that this
designed HTML helps with is that now

00:13:17.770 --> 00:13:21.060
because we have written
the title in h3,

00:13:21.060 --> 00:13:23.870
the screen reader user
can use shortcuts to jump

00:13:23.870 --> 00:13:25.870
between these h3 titles.

00:13:25.870 --> 00:13:29.810
That way they do not have to consume
content, all the content one by one.

00:13:29.810 --> 00:13:32.670
They can just quickly
jump between these trees

00:13:32.670 --> 00:13:36.480
and quickly get a sense of
what this list is all about.

00:13:36.480 --> 00:13:40.430
Like you can see, just changing
these three things, ul, Ii’s

00:13:40.430 --> 00:13:45.350
and h3, just changing such small
amount of code has resulted

00:13:45.350 --> 00:13:50.770
in such an enhanced
accessibility experience.

00:13:50.770 --> 00:13:54.270
I encourage you to be mindful
as developers next time

00:13:54.270 --> 00:13:58.560
when you are writing any complement
in your code, then make sure

00:13:58.560 --> 00:14:02.420
that you are taking some bit of
time to be mindful of what kind

00:14:02.420 --> 00:14:04.460
of HTML tags you are using.

00:14:04.460 --> 00:14:09.290
What you can do is go
to W3C or MDN system

00:14:09.290 --> 00:14:14.720
and see different HTML tags
and try to make the best guess

00:14:14.720 --> 00:14:19.230
in the given situation, and for
the given piece of information

00:14:19.230 --> 00:14:23.480
that I'm trying to render, which
HTML tag is best suited for that.

00:14:23.480 --> 00:14:27.050
And it might take some
time in the initial stage.

00:14:27.050 --> 00:14:31.490
It’s a couple of weeks
only, but after those couple

00:14:31.490 --> 00:14:35.420
of weeks it becomes the firsthand
nature and it becomes part

00:14:35.420 --> 00:14:37.050
of the practice.

00:14:37.050 --> 00:14:42.530
Especially, does not require a lot
of effort to make such decisions,

00:14:42.530 --> 00:14:43.080
right.

00:14:43.080 --> 00:14:46.980
And making such decisions can
have a greater impact like we saw.

00:14:46.980 --> 00:14:49.480
I really encourage you
that you take the time.

00:14:50.690 --> 00:14:54.610
Another thing that I want to
highlight is that only Semantic HTML

00:14:54.610 --> 00:14:57.500
is not going to be
enough in all situations.

00:14:57.500 --> 00:14:59.520
Though in most
situations it will help.

00:14:59.520 --> 00:15:02.500
But in some situations, you will
also have to use ARIA Attributes,

00:15:02.500 --> 00:15:08.300
and I encourage you to learn
about ARIA attributes as well.

00:15:08.300 --> 00:15:12.560
In this next slide we have comparison
of both the Accessibility Trees,

00:15:12.560 --> 00:15:14.500
and you can see the
one on the right,

00:15:14.500 --> 00:15:17.290
the one updated has a
better structure to it.

00:15:17.290 --> 00:15:20.980
So, how do you know what are the
things that you need to consider

00:15:20.980 --> 00:15:23.490
while working on your website?

00:15:23.490 --> 00:15:25.590
What are the things that you
need to consider to ensure

00:15:25.590 --> 00:15:29.760
that your website is accessibility
compliant or accessibly friendly?

00:15:29.760 --> 00:15:32.131
For that there is
something called WCAG..

00:15:32.131 --> 00:15:34.850
WCAG is a set of recommendations

00:15:34.850 --> 00:15:38.770
that explains how to create
accessibility friendly websites.

00:15:38.770 --> 00:15:43.890
For that there is this
resource on W3C's website

00:15:43.890 --> 00:15:46.810
that you can just visit
the At a Glance section

00:15:46.810 --> 00:15:50.590
and you can get a better sense
of what this is all about.

00:15:50.590 --> 00:15:53.280
They also have a quick reference
guide where you can just go

00:15:53.280 --> 00:15:55.830
through each and every
recommendation one by one

00:15:55.830 --> 00:15:59.590
and you can see what are the
different techniques that you can use

00:15:59.590 --> 00:16:02.270
in order to achieve each
and every recommendation.

00:16:02.270 --> 00:16:06.890
It is a really helpful resource,
and you can spend some time

00:16:06.890 --> 00:16:09.080
to learn about these
different guidelines.

00:16:09.080 --> 00:16:12.940
And after some time this also
becomes a firsthand nature.

00:16:12.940 --> 00:16:16.760
All right, so the other way to know
what are the accessibility violations

00:16:16.760 --> 00:16:21.520
that you're making is by using WAVE,
the ARC Toolkit or Axe DevTools.

00:16:21.520 --> 00:16:25.210
These are browser-based extensions
that can be used to know

00:16:25.210 --> 00:16:28.140
what are the violations
that your webpage is making.

00:16:28.140 --> 00:16:30.970
One thing I want to highlight is
that these tools are not going

00:16:30.970 --> 00:16:33.600
to tell you the hundred
percent of the violations

00:16:33.600 --> 00:16:37.240
that you are making, but they will
do a good job in highlighting 30

00:16:37.240 --> 00:16:39.400
to 50% of those violations.

00:16:39.400 --> 00:16:41.210
The last tool
[unintelligible 16:44]

00:16:41.210 --> 00:16:41.790
is Pally.

00:16:41.790 --> 00:16:46.580
It can be used for automating tests,
billing times or scarcity times

00:16:46.580 --> 00:16:49.940
so that these tests
can be automated.

00:16:49.940 --> 00:16:53.070
All right, with that,
I believe that is pretty much it.

00:16:53.070 --> 00:16:55.300
And thank you very much
for attending this session.

00:16:56.440 --> 00:16:58.580
You can reach out to me
if you have any doubts

00:16:58.580 --> 00:17:01.610
or if you need any help with
getting started with accessibility.

00:17:01.610 --> 00:17:06.970
I'm available @kelin1003 and on
social media such as LinkedIn,

00:17:06.970 --> 00:17:08.560
Twitter or Instagram.

00:17:08.560 --> 00:17:10.380
Thank you very much
and have a good day.