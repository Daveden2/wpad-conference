WEBVTT

00:00:00.063 --> 00:00:31.109
[silence]

00:00:31.110 --> 00:00:33.410
<v Devin Egger> Hello everyone,
and thank you for joining us

00:00:33.410 --> 00:00:37.920
for WordPress
Accessibility Day 2022.

00:00:37.920 --> 00:00:40.760
My name is Devin Egger,
senior software developer at HDC

00:00:40.760 --> 00:00:44.640
and writer at Master WP, and I'm your
host for the final session today.

00:00:45.720 --> 00:00:48.180
Gang, the sun is up, the birds
are chirping, and we've made it

00:00:49.230 --> 00:00:52.710
through a full 23 hours of learning
and sharing about accessibility

00:00:52.710 --> 00:00:53.710
and WordPress.

00:00:54.460 --> 00:00:57.590
I hope you've enjoyed it as much
as I have truly a standup job

00:00:57.590 --> 00:01:01.780
from all the presenters, volunteers,
and organizers for this year's event.

00:01:01.780 --> 00:01:04.780
A huge thank you to everyone
involved for making this happen.

00:01:04.780 --> 00:01:07.100
Just as a quick note,
we did have a question pop up

00:01:07.100 --> 00:01:09.110
in the Q&A from the
last presentation,

00:01:09.110 --> 00:01:13.790
asking when will the recordings be
published and available on YouTube.

00:01:13.790 --> 00:01:16.450
The answer to this question
and other similar questions you

00:01:16.450 --> 00:01:19.420
might have can be
found on the FAQ page

00:01:19.420 --> 00:01:25.080
of the WordPress Accessibility Day
website at wpaccessibility.day/faq.

00:01:28.000 --> 00:01:31.680
Following this session, we'll have
a live Q&A session with Damon,

00:01:31.680 --> 00:01:32.590
our presenter.

00:01:32.590 --> 00:01:34.810
Please remember to
join us in Slido.

00:01:34.810 --> 00:01:36.710
That's the chat section
just to the side

00:01:36.710 --> 00:01:38.960
or below the video
you're watching now.

00:01:38.960 --> 00:01:41.380
You can post your questions
in the Q&A section

00:01:41.380 --> 00:01:45.670
or just join the conversation
in the ideas section.

00:01:45.670 --> 00:01:48.210
All right, we're down to our
final presentation, folks.

00:01:48.210 --> 00:01:50.870
One, I know a bunch of
us have been waiting for.

00:01:50.870 --> 00:01:55.790
Coming up is Damon Cook with
dialogs, modals, and pop-ups.

00:01:55.790 --> 00:02:00.750
Damon is a developer advocate at my
favorite hosting provider, WP Engine.

00:02:00.750 --> 00:02:03.690
Previously, he navigated
the WordPress Agency land

00:02:03.691 --> 00:02:04.900
for around a decade.

00:02:04.900 --> 00:02:09.200
He's a purveyor and
discoverer of musical frisson.

00:02:09.200 --> 00:02:13.140
He can be found in the rems of
WordPress Slack, WooCommerce Slack,

00:02:13.140 --> 00:02:14.520
and Twitter.

00:02:14.520 --> 00:02:16.560
All right, without further
ado, here's Damon.

00:02:16.560 --> 00:02:17.170
Take it away Damon.

00:02:20.574 --> 00:02:21.420
<v Damon Cook> Hi, everyone.

00:02:21.420 --> 00:02:25.640
Thanks for joining me today at
WordPress Accessibility 2022.

00:02:27.150 --> 00:02:31.170
I'm Damon Cook,
a developer advocate at WP Engine.

00:02:31.170 --> 00:02:34.410
Formerly, I spend over a
decade as a front-end developer

00:02:34.410 --> 00:02:37.000
in a variety of
WordPress-centric agencies.

00:02:38.340 --> 00:02:45.020
Today, I'm here to talk about modals,
pop-ups, dialogs, light boxes,

00:02:45.020 --> 00:02:46.020
and alerts.

00:02:46.900 --> 00:02:49.520
These are all pretty common
terms, often used

00:02:49.520 --> 00:02:53.390
to describe similar website
interfaces we often interact with

00:02:53.390 --> 00:02:54.520
on a daily basis.

00:02:55.580 --> 00:02:59.950
Some love them, some hate them and
they're often an evil necessity.

00:03:01.850 --> 00:03:06.450
First, I want to differentiate
some of the common native dialogs

00:03:06.450 --> 00:03:08.990
we often see from
non-native dialogs.

00:03:10.410 --> 00:03:14.290
Next, we'll dive into the differences
between modals, light boxes,

00:03:14.290 --> 00:03:15.290
and pop-ups.

00:03:16.880 --> 00:03:19.089
With an understanding
of the differences

00:03:19.090 --> 00:03:20.760
between these interface terms,

00:03:20.760 --> 00:03:24.660
we can then dive into some best
practices for implementing dialogs

00:03:24.660 --> 00:03:28.950
and create a clear pathway for
users to access our sites content.

00:03:31.170 --> 00:03:35.280
The latter half of my presentation
will take a deep dive into code,

00:03:35.280 --> 00:03:40.560
where we step through building
up an ideal dialog experience.

00:03:40.560 --> 00:03:43.490
First, I want to start with
a little personal story.

00:03:47.330 --> 00:03:49.470
I don't know about you,
but I'm getting old.

00:03:51.170 --> 00:03:53.850
In the past few years,
I've been experiencing

00:03:53.851 --> 00:03:55.540
some mild chronic back pain.

00:03:55.540 --> 00:03:59.050
It is from years of sitting
and general inactivity.

00:03:59.050 --> 00:04:03.890
I started stretching and walking to
try and combat the persistent aches.

00:04:04.930 --> 00:04:07.410
I use my walks to
enjoy time in nature

00:04:07.410 --> 00:04:10.240
and appreciate all the
simple things I can.

00:04:10.240 --> 00:04:14.370
My breath, my movement, and my
senses are all at the forefront

00:04:14.370 --> 00:04:15.760
of these experiences.

00:04:17.210 --> 00:04:19.530
Most of the time,
I stick to the same path.

00:04:19.530 --> 00:04:22.970
It is a city-owned nature trail,
which snakes between the Hudson River

00:04:22.970 --> 00:04:25.650
on one side and a canal
on the other side.

00:04:29.770 --> 00:04:34.200
Throughout my years of walking this
path, I've encountered obstacles.

00:04:34.200 --> 00:04:38.680
Sometimes after a storm will be a
large tree trunk across the path.

00:04:39.810 --> 00:04:43.470
Other times I've been chased by
monstrous Canadian geese protecting

00:04:43.470 --> 00:04:45.050
their family.

00:04:45.050 --> 00:04:48.860
In a lot of ways, these
obstacles are similar to pop-ups.

00:04:48.860 --> 00:04:51.640
They can inhibit the
flow of walking or deter

00:04:51.640 --> 00:04:54.750
the whole activity altogether,
which was the case for me

00:04:54.750 --> 00:04:55.840
when the geese were nesting.

00:05:00.700 --> 00:05:02.500
Why do I share this?

00:05:02.500 --> 00:05:05.900
We're all constantly being
made aware of our mortality

00:05:05.900 --> 00:05:09.180
through various small and
sometimes dramatic experiences.

00:05:10.260 --> 00:05:13.170
Perhaps our vision or hearing
is degrading, or in my case,

00:05:13.170 --> 00:05:14.920
my mobility has been a challenge.

00:05:15.970 --> 00:05:19.920
Old age is a common thread
we can all somehow relate to,

00:05:19.920 --> 00:05:22.620
and ultimately we're all
just temporarily abled.

00:05:23.900 --> 00:05:26.540
Why not build a web
for our future selves?

00:05:30.800 --> 00:05:34.580
Whether you're currently visually
impaired, have severe motor issues,

00:05:34.580 --> 00:05:38.410
or mobility challenges, we're all
on a migratory path to any one

00:05:38.410 --> 00:05:42.740
of these experiences, it is
imperative to build for everyone

00:05:42.740 --> 00:05:44.700
to access and use our
content on the web.

00:05:45.840 --> 00:05:49.530
Let's dig in on how to create
better pathways with dialogs.

00:05:54.150 --> 00:05:57.980
First, I want to clarify these
different user interface patterns

00:05:57.980 --> 00:06:01.180
and compare their
similarities and differences.

00:06:02.660 --> 00:06:11.320
Often these words, dialog,
alert, lightbox, pop-up, prompt,

00:06:11.320 --> 00:06:13.940
and modal can become intertwined.

00:06:16.800 --> 00:06:22.060
Let's start with what I classify
as built in or native dialogs.

00:06:23.160 --> 00:06:26.780
These native dialogs allow for
communication between the user

00:06:26.780 --> 00:06:30.260
and the system and are
typically styled by the browser

00:06:30.260 --> 00:06:32.720
or operating system
that is displaying them.

00:06:34.230 --> 00:06:37.750
I'm sure we've all experienced these
types of dialogs on our devices.

00:06:40.890 --> 00:06:44.680
These interfaces are often where
developers begin their journey

00:06:44.680 --> 00:06:50.570
because JavaScript allows for quick
access to things like window.alert,

00:06:50.570 --> 00:06:57.190
window.prompt, window.confirm, and
even window.print JavaScript methods.

00:06:58.240 --> 00:07:00.990
Again, these are fine and
dandy for allowing the users

00:07:00.990 --> 00:07:02.850
to interface directly
with the browser.

00:07:06.930 --> 00:07:12.080
Common use cases for native dialogs
are system access permissions

00:07:12.080 --> 00:07:16.180
like allow this site to
access your microphone

00:07:16.180 --> 00:07:21.160
or destructive actions like, are
you sure you'll want to quit Safari?

00:07:21.160 --> 00:07:25.470
You have 782 tabs open,
which is often the case for me.

00:07:27.180 --> 00:07:32.740
These dialogs can be broken down
further by action types like one,

00:07:32.740 --> 00:07:36.850
two, and three action dialogs,
which refer to the amount

00:07:36.850 --> 00:07:39.060
of button options
available for each prompt.

00:07:42.450 --> 00:07:47.470
The remaining user interface patterns
besides native dialogs are modals,

00:07:47.470 --> 00:07:49.070
pop-ups, and lightboxes.

00:07:50.380 --> 00:07:54.500
For the most part, these are
non-native implementations,

00:07:54.500 --> 00:07:57.470
whereas developers have
the option to control

00:07:57.470 --> 00:07:59.040
and manipulate their appearance.

00:08:00.420 --> 00:08:04.090
Hence, it is far more common to
encounter these on a webpage.

00:08:05.720 --> 00:08:11.000
These can be differentiated by
the idea that they all pop up

00:08:11.000 --> 00:08:14.790
and typically have an overlay or
semi opaque background behind them.

00:08:16.610 --> 00:08:20.250
The overlay background may
indicate that the items behind

00:08:20.250 --> 00:08:22.860
cannot be accessed while
the dialog is open.

00:08:23.970 --> 00:08:27.580
We'll dive into the nuances of
this particular concept in a bit.

00:08:27.580 --> 00:08:37.700
When it comes to best practices,
The first non-native user interface

00:08:37.700 --> 00:08:38.700
is pop-ups.

00:08:40.280 --> 00:08:44.590
Pop-ups represent components
that pop up on the user's screen

00:08:44.590 --> 00:08:47.030
and typically display
marketing material.

00:08:48.760 --> 00:08:53.640
Usually, these pop-ups appear on
page load and can be synonymous

00:08:53.640 --> 00:08:55.020
with landing pages.

00:08:56.330 --> 00:09:00.910
One example is either the
ubiquitous join our mailing list

00:09:00.910 --> 00:09:05.140
form that encourages users to
sign up and receive emails.

00:09:09.190 --> 00:09:13.750
Lightboxes are the next example
of a non-native interface

00:09:13.750 --> 00:09:17.610
that is usually associated
with images and pop-ups

00:09:17.610 --> 00:09:21.000
to enlarge a respective
thumbnail image on the page.

00:09:24.410 --> 00:09:28.580
Last, we have modals,
which are typically triggered

00:09:28.580 --> 00:09:30.240
with the user's initiation.

00:09:31.350 --> 00:09:36.110
An example of this is a login
modal, which would pop up a form

00:09:36.110 --> 00:09:39.520
with a background overlay and allow
a user to sign into their account.

00:09:43.710 --> 00:09:47.190
You may ask,
when should I use a dialog?

00:09:47.190 --> 00:09:50.230
This is a great question,
something to always ask ourselves

00:09:50.230 --> 00:09:55.100
when tempting the idea, it can
seem easy to tuck content away

00:09:55.100 --> 00:09:58.570
in a dialog if screen
estate becomes an issue,

00:09:58.570 --> 00:10:01.100
especially on smaller
mobile devices.

00:10:02.130 --> 00:10:06.320
However, it introduces context
switching, which has its own set

00:10:06.320 --> 00:10:08.590
of complicating factors.

00:10:08.590 --> 00:10:12.010
At the end of the day, if something
is going to be hidden away

00:10:12.010 --> 00:10:14.340
in an offscreen dialog,
then it should be considered

00:10:14.340 --> 00:10:18.220
whether it is necessary and
whether the hidden content could

00:10:18.220 --> 00:10:22.300
instead be prioritized into
the existing document flow.

00:10:27.080 --> 00:10:28.750
Best practices.

00:10:28.750 --> 00:10:33.240
Now, let's dive in on what makes
an ideal dialog experience for any

00:10:33.240 --> 00:10:35.330
and all users to
access our content.

00:10:38.680 --> 00:10:44.510
First, did you know that there
is already a dialog HTML element?

00:10:44.510 --> 00:10:46.230
Wild, right?

00:10:46.230 --> 00:10:49.560
Unfortunately,
the implementation between browsers

00:10:49.560 --> 00:10:54.940
can be wildly inconsistent, and
still it largely requires JavaScript

00:10:54.940 --> 00:10:55.940
to work.

00:10:57.090 --> 00:11:01.720
For example, currently in
Chrome, clicking the backdrop

00:11:01.720 --> 00:11:05.990
of this native element does
not dismiss the dialog.

00:11:07.500 --> 00:11:10.200
Also, the styling for the
dialog element is left

00:11:10.200 --> 00:11:12.910
to each browser's discretion,
which is never ideal.

00:11:16.230 --> 00:11:21.970
Fortunately, we have Kitty
Giraudel's a11y-dialog,

00:11:21.970 --> 00:11:26.340
lightweight JavaScript package,
which is the recommended tool

00:11:26.340 --> 00:11:28.280
for creating dialogs
on the web today.

00:11:30.180 --> 00:11:34.250
Kitty's package has been
extensively tested and documented

00:11:34.250 --> 00:11:36.990
and they're constantly
revisiting additional testing

00:11:36.990 --> 00:11:38.260
and updates to the package.

00:11:39.860 --> 00:11:43.510
This package follows
the dialog modal pattern

00:11:43.510 --> 00:11:48.000
from the ARIA authoring practices
guide and is unopinionated

00:11:48.000 --> 00:11:50.700
with CSS styling and
it is lightweight.

00:11:56.130 --> 00:11:58.640
Again, here's an overview of
best practices and we'll dive

00:11:58.640 --> 00:11:59.780
into this one by one.

00:12:01.890 --> 00:12:06.610
Being mindful to maintain
focus, semantic markup,

00:12:06.610 --> 00:12:11.230
buttons versus links,
and allow for keyboard interaction.

00:12:11.230 --> 00:12:13.233
One thing I like to
note when building these

00:12:13.233 --> 00:12:15.230
complex custom interfaces is

00:12:15.230 --> 00:12:18.480
that before you reach for ARIA
roles, always consider

00:12:18.480 --> 00:12:21.570
whether you are using
the right HTML markup.

00:12:23.310 --> 00:12:26.910
ARIA can update the accessibility
tree but does nothing

00:12:26.910 --> 00:12:29.700
for displaying or altering
functionality on a page.

00:12:31.400 --> 00:12:35.650
Ultimately, HTML with a sprinkle
of CSS, then some JavaScript.

00:12:35.650 --> 00:12:38.030
This is the ideal order
of operation when it comes

00:12:38.030 --> 00:12:41.410
to creating a progressively
enhanced experience.

00:12:46.420 --> 00:12:49.650
Here I have an image
from a website.

00:12:50.760 --> 00:12:56.270
It's a music review site,
which contains a dialog

00:12:56.270 --> 00:12:59.870
as the user visits the site.

00:12:59.870 --> 00:13:04.370
The dialog after about I think
30 seconds shows up on the screen

00:13:05.480 --> 00:13:10.180
and prompts the user for a
newsletter form to subscribe.

00:13:13.480 --> 00:13:16.220
To go over some of
the takeaways here.

00:13:16.220 --> 00:13:20.940
When the dialog has been opened,
it is important to take track-focus

00:13:20.940 --> 00:13:22.960
on two things.

00:13:22.960 --> 00:13:26.980
Programmatically log the item
that was last focused right before

00:13:26.980 --> 00:13:28.960
the dialog was opened.

00:13:28.960 --> 00:13:34.060
You can use the document.active
element JavaScript for this,

00:13:34.060 --> 00:13:36.410
which is typically the element
that triggered the action

00:13:37.990 --> 00:13:41.740
and immediately shift focus
to the most meaningful element

00:13:41.740 --> 00:13:42.750
within the dialog.

00:13:45.560 --> 00:13:49.160
We want to log the focus because
we want to restore the focus back

00:13:49.160 --> 00:13:52.020
to that element that had it
before the dialog was open.

00:13:53.400 --> 00:13:55.920
Basically, we want to
maintain the user's journey

00:13:55.920 --> 00:13:59.120
and not place them somewhere
arbitrary like the beginning or end

00:13:59.120 --> 00:14:00.120
of the document.

00:14:01.060 --> 00:14:05.440
However, once the dialog is opened,
then we want to create a trap

00:14:05.440 --> 00:14:07.320
for tabbing and focus.

00:14:08.540 --> 00:14:11.960
If the user tabs forward,
then they should be able to cycle

00:14:11.960 --> 00:14:16.750
through all tab items and can
circuitously loop through them.

00:14:18.110 --> 00:14:20.750
One of those items should
be the close button.

00:14:23.190 --> 00:14:26.440
Which element to focus on when
the dialog is opened depends

00:14:26.440 --> 00:14:29.400
on the type and amount of
content within the dialog.

00:14:30.620 --> 00:14:35.100
Some ideas might be focusing on
the first element in the dialog

00:14:36.550 --> 00:14:40.540
or focusing on the close button,
which gives the user a quick means

00:14:40.540 --> 00:14:45.150
to bail on the experience
or less commonly set focus

00:14:45.150 --> 00:14:46.620
on the dialog itself.

00:14:53.550 --> 00:14:58.525
Here, I've taken a short
video demonstrating

00:14:58.526 --> 00:15:01.510
another music review site.

00:15:01.510 --> 00:15:07.240
In this video, I am tabbing
through-- Actually, there is a dialog

00:15:07.240 --> 00:15:13.470
which is presented on top of the
existing page and I'm tabbing

00:15:13.470 --> 00:15:17.080
through to show that
the rest of the document

00:15:17.080 --> 00:15:20.880
is actually not below the
dialog, which is not ideal.

00:15:21.910 --> 00:15:26.130
This allows us to continue tabbing
through the page in the background

00:15:27.450 --> 00:15:32.260
and basically detracts from
the whole dialog experience.

00:15:34.840 --> 00:15:38.130
Once a dialog is open,
it is not only important to trap

00:15:38.130 --> 00:15:40.880
and maintain focus,
but also be sure to make the rest

00:15:40.880 --> 00:15:42.910
of the document behind it dormant.

00:15:44.720 --> 00:15:48.730
This can be achieved by
assigning an ARIA-modal true

00:15:48.730 --> 00:15:50.380
to the wrapping dialog element.

00:15:51.870 --> 00:15:55.970
This signals to screen readers
that the content beneath the dialog

00:15:55.970 --> 00:15:58.030
are not part of the
dialog's content.

00:15:59.770 --> 00:16:04.160
It is important to remember that ARIA
only updates the accessibility tree

00:16:04.160 --> 00:16:08.110
and setting ARIA modal equals
true, does nothing

00:16:08.110 --> 00:16:11.010
to modify the elements' visual
appearance or functionality.

00:16:12.210 --> 00:16:15.000
In other words,
JavaScript and CSS is required.

00:16:20.230 --> 00:16:24.140
Again, this is the
same music review site

00:16:24.140 --> 00:16:29.300
and with the same dialog presented
in a video that I've captured

00:16:29.300 --> 00:16:32.850
and I'm demonstrating
how would the dialog open

00:16:32.850 --> 00:16:36.390
when the page behind
it is still scrollable,

00:16:36.391 --> 00:16:38.750
which is typically not ideal.

00:16:41.510 --> 00:16:44.190
Also, keep in mind that
when a dialog is open,

00:16:44.190 --> 00:16:46.760
the window will still
process scroll events.

00:16:48.300 --> 00:16:53.870
This can usually be fixed by
adding a class to the HTML element

00:16:53.870 --> 00:16:59.110
when the dialog is open and setting
some CSS for overflow y hidden.

00:17:00.510 --> 00:17:04.660
This is not always bulletproof and
things can quickly get complicated

00:17:04.660 --> 00:17:08.360
when you're targeting different
devices or if you're dealing

00:17:08.360 --> 00:17:11.280
with multiple CSS position
elements on the page.

00:17:12.700 --> 00:17:16.840
Kitty offered some basic
scroll-locking techniques

00:17:16.840 --> 00:17:20.120
within the a11y dialog package.

00:17:21.930 --> 00:17:26.070
Also, there is a body scroll
lock package for a foolproof

00:17:26.070 --> 00:17:28.650
and lightweight
JavaScript solution.

00:17:33.490 --> 00:17:36.560
Now let's dig in on
marking up a dialog.

00:17:38.620 --> 00:17:40.700
Semantic markup is a great thing.

00:17:41.850 --> 00:17:45.210
We can start scaffolding the
markup for a dialog by locating

00:17:45.210 --> 00:17:50.800
the actual dialog content outside
of the main element content

00:17:50.800 --> 00:17:51.800
of the page.

00:17:54.060 --> 00:17:59.030
Most importantly, the dialog and
main content are still co-located

00:17:59.030 --> 00:18:03.120
in the document, but the
dialog logistically represents

00:18:03.120 --> 00:18:06.200
a whole other document when
opened, which is important

00:18:06.200 --> 00:18:09.380
to remember as this can
confuse the system technologies

00:18:09.380 --> 00:18:10.490
we've not accounted for.

00:18:15.260 --> 00:18:17.590
Next,
we can add the hidden attribute

00:18:17.590 --> 00:18:19.940
to our wrapping
dialog div container.

00:18:21.070 --> 00:18:25.140
This will hide the div from
the page and screen readers,

00:18:25.140 --> 00:18:27.820
and we do not have to worry
about any flashing content

00:18:27.820 --> 00:18:31.830
on the page load until we're
ready to display the dialog.

00:18:35.360 --> 00:18:38.850
A quick aside,
buttons versus links.

00:18:38.850 --> 00:18:39.950
The age-old battle.

00:18:41.460 --> 00:18:45.707
Buttons are best for clickable
actions like sign up,

00:18:45.708 --> 00:18:47.230
download, or open.

00:18:48.340 --> 00:18:52.440
Also, if you want a user to
trigger something with JavaScript,

00:18:52.440 --> 00:18:54.010
then usually you want a button.

00:18:55.580 --> 00:19:00.530
Links are best used to take users
to another page or as an anchor

00:19:00.530 --> 00:19:02.580
to a different target
on the same page.

00:19:04.260 --> 00:19:08.180
Oftentimes, developers will use
a link because they do not know

00:19:08.180 --> 00:19:11.130
how to style a button to remove
its button-like appearance.

00:19:12.500 --> 00:19:15.580
More often you'll want a
button to trigger a dialog open

00:19:15.580 --> 00:19:18.960
and a separate button within
the dialog markup to close.

00:19:23.710 --> 00:19:29.060
Another common pitfall for developers
is properly including an SVG icon

00:19:29.060 --> 00:19:30.100
in your button markup.

00:19:31.390 --> 00:19:34.860
Remember, if the icon is
purely decorative, then hide it

00:19:34.860 --> 00:19:37.190
from screen readers
with ARIA hidden true.

00:19:39.190 --> 00:19:43.900
Set focusable falls for IE and
avoid any additional tab stops

00:19:45.360 --> 00:19:49.680
and set a screen reader a
class of screen reader text

00:19:49.680 --> 00:19:54.680
on a wrapping span around the
text, which will position

00:19:54.680 --> 00:19:56.590
and pull the text off the screen.

00:19:56.590 --> 00:19:59.620
When tab two, it'll still be
visible to screen readers.

00:20:01.040 --> 00:20:04.980
Also, use the CSS to set
pointer-events to none on the SVG

00:20:04.980 --> 00:20:09.460
if you want to refrain the
element from your click events,

00:20:09.460 --> 00:20:10.770
which is typically the case.

00:20:14.130 --> 00:20:15.180
Now back to our markup.

00:20:16.540 --> 00:20:19.480
Now that we're equipped with a
better understanding of buttons,

00:20:19.480 --> 00:20:23.600
let's get back to the markup
and our dialog and add buttons

00:20:23.600 --> 00:20:25.370
to our overall markup.

00:20:25.370 --> 00:20:29.200
We'll add one for the opening
trigger and one for the closing

00:20:29.200 --> 00:20:30.200
of the dialog.

00:20:33.820 --> 00:20:37.050
Next thing we'll want to
incorporate our overlay

00:20:37.050 --> 00:20:38.990
or sometimes called the backdrop.

00:20:40.610 --> 00:20:44.720
This will be the semi-opaque
background behind the dialog

00:20:44.720 --> 00:20:48.500
that helps visually establish the
barrier between the main document

00:20:48.500 --> 00:20:49.980
and our dialog document.

00:20:51.970 --> 00:20:55.890
Also, note in the code
that we're also introducing

00:20:55.890 --> 00:21:00.040
an additional wrapping div element
around our actual dialog content

00:21:01.280 --> 00:21:03.770
and assigning it the
role of document.

00:21:05.640 --> 00:21:09.600
Assigning role document helps
signal assistive technology

00:21:09.600 --> 00:21:12.880
that this is a browsable
content that can be accessed

00:21:12.880 --> 00:21:14.540
in reading mode.

00:21:14.540 --> 00:21:19.506
This ARIA role is used in
complex context-switching widgets

00:21:19.506 --> 00:21:20.450
like a dialog.

00:21:22.770 --> 00:21:25.430
Ultimately we'll want to make
sure that clicking events

00:21:25.430 --> 00:21:29.490
on the backdrop will close the
dialog, but we'll also want

00:21:29.490 --> 00:21:33.630
to be sure to distinguish the
boundaries between the actual dialog

00:21:33.630 --> 00:21:34.630
and the backdrop.

00:21:36.110 --> 00:21:39.700
The dialog area itself should
not trigger the closing

00:21:39.700 --> 00:21:42.240
and just the backdrop
and the close button.

00:21:46.090 --> 00:21:50.040
Next, we'll want to add a
unique ID to our dialog's

00:21:50.040 --> 00:21:52.680
main wrapping div element.

00:21:53.850 --> 00:21:57.330
This will help with instantiating
it with JavaScript and allow

00:21:57.330 --> 00:22:00.170
for the possibility of
having multiple dialogs

00:22:00.170 --> 00:22:03.510
on a page each having
a unique ID of course.

00:22:05.460 --> 00:22:09.710
Also, we'll add ARIA hidden true
for the initial state of our dialog

00:22:09.710 --> 00:22:11.510
and to hide it from
assistive technology.

00:22:12.760 --> 00:22:17.440
Last we'll add an h1 element
for our dialogs title.

00:22:17.440 --> 00:22:19.406
This is significant
for screen readers

00:22:19.407 --> 00:22:21.020
to be able to associate a title

00:22:21.020 --> 00:22:25.480
with this dialog, which correlates
with the ID that we assigned

00:22:25.480 --> 00:22:30.220
to the dialog wrapping div in
the ARIA labeled by attribute.

00:22:34.800 --> 00:22:41.390
To finalize the hookup for using
the a11y dialog package, we'll need

00:22:41.390 --> 00:22:44.730
to add the package's data
attributes to target the show

00:22:44.730 --> 00:22:46.260
and hide action triggers.

00:22:51.610 --> 00:22:54.527
While we mostly
covered best practices

00:22:54.528 --> 00:22:56.770
with tabbing and focus order,

00:22:56.770 --> 00:22:58.530
one thing that is
important to consider is

00:22:58.530 --> 00:23:03.220
if the dialog's content has a lot
of stuff, then you'll likely want

00:23:03.220 --> 00:23:05.520
to elevate the priority
of the close button.

00:23:06.900 --> 00:23:10.200
Make it easy for users to
opt-out of the dialog early.

00:23:11.560 --> 00:23:13.700
Also,
be sure to use a button element

00:23:13.700 --> 00:23:18.430
because this affords keyboard
navigation of using the enter

00:23:18.430 --> 00:23:22.200
and spacebar key to trigger the
close and opening of the dialog.

00:23:23.513 --> 00:23:31.973
Again, there's a screenshot here
of the music review site dialog

00:23:31.974 --> 00:23:36.434
that is open and it's showing the tab
order that exists in this example.

00:23:37.500 --> 00:23:44.200
The first field or the first focus
element is the email address field.

00:23:45.380 --> 00:23:51.990
The second one is get new music
Friday and the third is no thanks.

00:23:51.990 --> 00:23:57.120
Which would also
dismiss the dialog.

00:23:58.360 --> 00:24:02.760
Then there are a few links at
the bottom to user agreement

00:24:02.760 --> 00:24:07.760
and privacy policy statements
which are also focusable.

00:24:07.760 --> 00:24:13.000
Then the last item, the seventh
focus element is the close button.

00:24:14.900 --> 00:24:18.890
This is a pretty ideal experience
of the further tabbing order.

00:24:24.250 --> 00:24:27.490
This wouldn't be a
presentation without touching

00:24:27.490 --> 00:24:34.880
on some WordPress existing
components, some examples of dialogs,

00:24:34.880 --> 00:24:37.400
and other accessibility
helpers within WordPress.

00:24:38.770 --> 00:24:45.420
If you were to build a custom
block, Gutenberg's WordPress

00:24:45.420 --> 00:24:50.300
components package contains
a visually-hidden component

00:24:50.300 --> 00:24:52.010
and a modal component.

00:24:54.160 --> 00:25:00.290
It's always best to try to
leverage course existing packages

00:25:00.290 --> 00:25:01.290
to line up with that.

00:25:02.350 --> 00:25:07.790
Then I also provided a link here
for screen reader text class,

00:25:07.790 --> 00:25:12.270
which I believe WordPress also
outputs in several instances,

00:25:12.270 --> 00:25:17.140
but you still have to incorporate
the CSS into your theme or plugin

00:25:17.140 --> 00:25:18.780
to tie it together.

00:25:23.900 --> 00:25:30.280
Also, in the sense I
think WordPress 5.8,

00:25:30.280 --> 00:25:35.290
the navigation block
utilizes a dialog.

00:25:36.640 --> 00:25:39.850
They're actually using a
package called Micromodal,

00:25:39.850 --> 00:25:41.340
which is a JavaScript dependency

00:25:41.340 --> 00:25:44.250
to surface the toggle
menu functionality.

00:25:45.510 --> 00:25:50.610
I have a video here
demonstrating in the Frost theme

00:25:50.610 --> 00:25:57.440
how to trigger open and
close this mobile menu

00:25:57.440 --> 00:26:02.250
which uses the
Micromodal as I said.

00:26:02.250 --> 00:26:06.640
There's a link at the bottom to an
overview of the navigation block.

00:26:10.190 --> 00:26:14.050
I hope this presentation has
helped you consider the right time

00:26:14.050 --> 00:26:17.810
when to use a dialog and whether
it is a most effective means

00:26:17.810 --> 00:26:19.820
of organizing your site's content.

00:26:21.500 --> 00:26:27.360
Please be sure to reach out on
Twitter, I am @dcook C-O-O-K

00:26:28.720 --> 00:26:34.480
and share any examples of dialogs
whether they're good, or bad,

00:26:36.230 --> 00:26:37.460
reach out.

00:26:37.460 --> 00:26:38.480
Thanks for having me today.

00:26:39.850 --> 00:26:44.830
If there are any questions in the
chat, I'd be happy to follow up.

00:26:46.739 --> 00:26:48.040
<v Devin> Awesome.

00:26:48.040 --> 00:26:49.170
Thanks, Damon.

00:26:49.170 --> 00:26:51.370
Wow, just truly great information.

00:26:51.370 --> 00:26:53.200
Thanks for sharing
all that with us.

00:26:53.200 --> 00:26:55.490
Some really good stuff
that we can benefit from.

00:26:55.490 --> 00:27:00.350
I know personally, I have to handle
how to effectively build experiences

00:27:00.350 --> 00:27:02.850
like this pretty much every day.

00:27:02.850 --> 00:27:05.780
If any of you are like me and
watching everything that you share

00:27:05.780 --> 00:27:09.190
to Max and myself, "Oh, no,
did I leave some users out

00:27:09.190 --> 00:27:10.960
on the last website that I built?"

00:27:12.880 --> 00:27:16.820
That's the point of these
presentations, this whole event

00:27:16.820 --> 00:27:20.140
that accessibility is a journey
and we're all learning here

00:27:20.140 --> 00:27:21.740
no matter what level we're on.

00:27:22.990 --> 00:27:24.240
Seriously, thank you.

00:27:24.240 --> 00:27:25.970
We do have some questions.

00:27:25.970 --> 00:27:29.410
The first one is from Joe Dolson.

00:27:29.410 --> 00:27:32.830
Are there any existing
WordPress plugins that you know

00:27:32.830 --> 00:27:36.380
of that create a good
functional dialog?

00:27:39.398 --> 00:27:42.630
<v Damon> Unfortunately,
I have not recently researched

00:27:42.630 --> 00:27:46.400
the existing plugins that provide
that so no, I do not have an answer

00:27:46.400 --> 00:27:49.630
to that but I would be happy to
follow up probably on Twitter

00:27:49.630 --> 00:27:53.980
because I'd be curious myself
to test out a few plugins

00:27:53.980 --> 00:27:56.520
and see which ones
do a good job of it.

00:27:57.743 --> 00:27:58.960
<v Devin> Likewise.

00:27:58.960 --> 00:28:02.960
I'm wondering also if there's
any good blocks as well.

00:28:04.750 --> 00:28:08.190
See, there is another
question from Curtis.

00:28:08.190 --> 00:28:10.000
This is a good one.

00:28:10.000 --> 00:28:17.490
Are these specific WCAG
guidelines related to the behavior

00:28:17.490 --> 00:28:20.010
of modals and dialogs or is
everything that you talked

00:28:20.010 --> 00:28:21.660
about here just best practices?

00:28:24.554 --> 00:28:28.490
<v Damon> They are best
practices but they also do relate

00:28:28.490 --> 00:28:32.980
to several key guidelines for sure
around this type of dialog widget.

00:28:36.124 --> 00:28:37.760
<v Devin> Okay, great.

00:28:39.750 --> 00:28:40.530
Let's see.

00:28:40.530 --> 00:28:41.250
A couple more.

00:28:41.250 --> 00:28:46.890
Amber did chime in and said
that Popup Maker does a good job

00:28:46.890 --> 00:28:48.990
of doing good dialogs.

00:28:48.990 --> 00:28:50.350
<v Damon> Oh, that's good to know.

00:28:51.430 --> 00:28:55.000
<v Devin> We got another
question in the chat from Darren.

00:28:55.000 --> 00:28:59.380
He said in the accessible forms
talk yesterday, they mentioned

00:28:59.380 --> 00:29:04.150
that you shouldn't put anything
after the submit button on a form

00:29:04.150 --> 00:29:07.060
because the submit button is
considered the end of the form.

00:29:07.060 --> 00:29:11.860
Do you have any comments on that
regarding the dialog that you showed?

00:29:11.860 --> 00:29:15.130
Are dialogs like a
special case with that?

00:29:15.130 --> 00:29:17.210
What are your thoughts there?

00:29:17.210 --> 00:29:21.810
<v Damon> No, I think that would
likely hold true as a best practice

00:29:21.810 --> 00:29:25.280
as well when the form
exists in a dialog.

00:29:26.860 --> 00:29:28.280
I would think yes, definitely.

00:29:28.280 --> 00:29:33.880
The submit button would
be a great tab stop there.

00:29:35.410 --> 00:29:38.740
Besides,
being able to cycle to the close.

00:29:38.740 --> 00:29:40.300
That's a good question.

00:29:40.300 --> 00:29:45.900
I think it's probably going to be
based on context and preference

00:29:45.900 --> 00:29:47.550
in a way.

00:29:47.550 --> 00:29:50.910
Especially if the form is really
long, we might want to get

00:29:50.910 --> 00:29:53.580
to the close button quick
and give the option.

00:29:55.480 --> 00:29:58.400
Yes, that submit button would
probably be key as well.

00:30:00.860 --> 00:30:02.280
<v Devin> I agree.

00:30:02.280 --> 00:30:04.110
Oh, there are more questions
popping up, this is great.

00:30:07.340 --> 00:30:09.470
Question from anonymous.

00:30:09.470 --> 00:30:14.810
If a site has an alert pop-up
that is used during an emergency,

00:30:14.810 --> 00:30:18.610
it covers the front page
and has a close button,

00:30:18.610 --> 00:30:20.260
any suggestions for accessibility?

00:30:23.098 --> 00:30:30.360
<v Damon> There is a, I believe it's
a special ARIA role alert dialog

00:30:31.850 --> 00:30:38.080
which the a11y dialog
package also accounts for.

00:30:39.550 --> 00:30:43.370
I think there definitely are
some further considerations

00:30:43.370 --> 00:30:45.970
in that instance,
because you'll want

00:30:45.970 --> 00:30:51.690
to surface additional information
as to, and if there's any timing

00:30:51.690 --> 00:30:58.550
on the action whether it's
something that-- If it's a dialog

00:30:58.550 --> 00:31:00.930
that's going to appear and then
go away after a certain amount

00:31:00.930 --> 00:31:05.780
of time, surfacing that information
to screen readers is key

00:31:05.780 --> 00:31:08.750
so that everybody knows what's
going on, if that dialog is going

00:31:08.750 --> 00:31:15.530
to come and go, and how long
you have to take on the action.

00:31:16.675 --> 00:31:22.940
<v Devin> If there's urgency
involved or if that dialog is going

00:31:22.940 --> 00:31:27.430
to affect your experience coming
back to the website, I'm thinking.

00:31:28.840 --> 00:31:30.800
That's a really good question.

00:31:30.800 --> 00:31:35.190
We do have another question and
I'm going to scope this down

00:31:35.190 --> 00:31:36.790
just a little bit.

00:31:36.790 --> 00:31:41.050
What are some of the biggest
mistakes developers make in regard

00:31:41.050 --> 00:31:45.100
to modals, dialogs, and pop-ups?

00:31:45.100 --> 00:31:48.090
I have a couple I can think of
in mind, but what's your thoughts

00:31:48.090 --> 00:31:49.710
on that, Damon?

00:31:50.174 --> 00:31:53.420
<v Damon> I think the two
I tried to highlight was

00:31:53.420 --> 00:31:56.660
whether to use a button
or a link to trigger them.

00:31:56.660 --> 00:32:00.870
I think the button usually
affords so much more.

00:32:02.240 --> 00:32:06.840
It's usually just the case of a
developer doesn't feel like unstyling

00:32:06.840 --> 00:32:09.550
a button, which is unfortunate.

00:32:09.550 --> 00:32:13.260
Yes, usually a button is the
best case in those scenarios.

00:32:13.260 --> 00:32:20.210
Then the other thought I have is
setting focus in the modal lots

00:32:20.210 --> 00:32:24.470
of times that's common,
they just skip that idea

00:32:24.470 --> 00:32:27.950
and open up the modal
and just leave it to

00:32:27.950 --> 00:32:31.220
whatever experience happens,
but that's a key thing

00:32:31.220 --> 00:32:32.710
is setting focus there.

00:32:33.752 --> 00:32:34.850
<v Devin> I totally agree.

00:32:34.850 --> 00:32:37.619
One thing I can think of also,

00:32:37.620 --> 00:32:41.310
especially when the
modal is a search.

00:32:41.310 --> 00:32:44.400
If you click on the search
magnifying glass and it pops up

00:32:44.400 --> 00:32:50.190
in a modal for the search make
sure that focus goes to the search.

00:32:50.526 --> 00:32:52.110
<v Damon> Yes, definitely.

00:32:53.905 --> 00:32:56.950
<v Devin> Let's see, there's a
good question from Amber here.

00:32:56.950 --> 00:33:02.810
Are there any special considerations
for modals or pop-ups on mobile?

00:33:02.810 --> 00:33:05.540
Or if a specific low-vision
user is zoomed in

00:33:05.540 --> 00:33:10.160
to the 200 plus percent
on their computer,

00:33:10.160 --> 00:33:14.850
what specific considerations do
you think we can make for that?

00:33:16.061 --> 00:33:17.160
<v Damon> Yes,
that's a great question.

00:33:18.296 --> 00:33:23.900
A lot of it would probably
be applicable to CSS styling

00:33:23.900 --> 00:33:28.100
and accounting for different screen
sizes and trying to make things

00:33:28.100 --> 00:33:34.360
as responsive as possible using
probably some fluid typography.

00:33:37.990 --> 00:33:42.100
With that being said as well the
whole scroll locking that comes

00:33:42.100 --> 00:33:48.020
into play whether on different
devices there isn't necessarily

00:33:48.020 --> 00:33:51.860
a scroll element,
but a touch element to still have

00:33:51.860 --> 00:33:56.580
that background page be scrollable
is typically you don't want

00:33:56.580 --> 00:34:00.300
to lose that context of
where you are on the page

00:34:00.300 --> 00:34:02.440
in the background versus
where you are on the page

00:34:02.440 --> 00:34:06.140
in the foreground or the
dialog in the foreground.

00:34:06.140 --> 00:34:11.350
Keeping that across all devices,
keeping that context is key.

00:34:13.468 --> 00:34:16.670
<v Devin> You mean like if I'm
on my phone or like an iPad

00:34:16.670 --> 00:34:21.370
and I've scrolled halfway down
the page, it pops up a modal

00:34:21.370 --> 00:34:23.780
and I close that, making sure
that doesn't take me back

00:34:23.780 --> 00:34:26.990
to the top of the page or something,
make sure it comes right back

00:34:26.990 --> 00:34:29.140
to where I was on the page?

00:34:29.140 --> 00:34:29.760
<v Damon> Yes, definitely.

00:34:30.769 --> 00:34:32.380
<v Devin> That's a really,
really great point there.

00:34:33.770 --> 00:34:34.460
Let's see.

00:34:34.460 --> 00:34:36.700
I'll give it just a
couple more seconds to see

00:34:36.700 --> 00:34:41.160
if we have any more
questions pop up and if not,

00:34:41.160 --> 00:34:44.500
we're going to have Amber come
back in with some closing remarks.

00:34:46.550 --> 00:34:49.750
Just to reintroduce,
this is Damon Cook,

00:34:49.750 --> 00:34:53.280
developer advocate from WP Engine.

00:34:53.280 --> 00:34:56.050
Again, personally my
favorite hosting provider.

00:34:56.050 --> 00:35:00.480
My name is Devon Egger,
senior software developer at HDC

00:35:00.480 --> 00:35:02.630
and writer at Master WP.

00:35:02.630 --> 00:35:06.080
You're watching the final
closing presentation

00:35:06.080 --> 00:35:10.100
of WP Accessibility Day 2022.

00:35:11.710 --> 00:35:17.380
It actually does not look like we
have any more questions coming up.

00:35:17.380 --> 00:35:21.030
I'm assuming that Amber
will be joining us shortly?

00:35:21.030 --> 00:35:21.970
There she is.

00:35:21.970 --> 00:35:23.990
<v Amber Hinds> Hello.

00:35:23.990 --> 00:35:25.720
This is a fabulous presentation.

00:35:25.720 --> 00:35:29.050
Thank you so much, Damon,
for upholding yourself.

00:35:29.050 --> 00:35:31.863
I've been watching our viewer
account tick up and up and up and up.

00:35:31.863 --> 00:35:33.310
[chuckles]

00:35:33.832 --> 00:35:38.210
A very popular topic, very important
also sometimes tricky to get right.

00:35:38.210 --> 00:35:39.120
<v Damon> Yes, definitely.

00:35:39.738 --> 00:35:40.351
<v Amber> Yes.

00:35:42.300 --> 00:35:45.930
I think we probably will,
I'll wave goodbye to you all

00:35:45.930 --> 00:35:50.820
and just have myself in, and then
we can do a little wrap-up here.

00:35:50.820 --> 00:35:51.670
Thank you both.

00:35:52.417 --> 00:35:52.984
<v Damon> Thank you, Amber.

00:35:52.984 --> 00:35:53.590
<v Devin> Thank you.

00:35:53.590 --> 00:35:54.260
<v Damon> Thanks, Devin.