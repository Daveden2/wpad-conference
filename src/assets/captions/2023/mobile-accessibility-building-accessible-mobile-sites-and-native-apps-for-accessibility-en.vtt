WEBVTT

00:00:01.390 --> 00:00:04.820
 AMBER HINDS: WordPress
Accessibility Day 2023.

00:00:04.820 --> 00:00:08.180
Mobile Accessibility: Building
Accessible Mobile Sites

00:00:08.181 --> 00:00:11.840
and Native Apps for
Accessibility, with Speaker,

00:00:11.840 --> 00:00:15.740
Gian Wild, CEO, AccessibilityOz.

00:00:15.740 --> 00:00:19.920
This presentation was
recorded September 28th, 2023.

00:00:21.480 --> 00:00:24.210
 SAMYUKTHA CHADARAM: Welcome
to WordPress Accessibility 2023.

00:00:24.210 --> 00:00:29.590
My name is Samyuktha, and I am an
Accessibility Consultant from India.

00:00:29.590 --> 00:00:32.640
Thank you for joining us
for Mobile Accessibility:

00:00:32.640 --> 00:00:36.230
Building Accessible Mobile Sites
and Native Apps for Accessibility,

00:00:36.230 --> 00:00:37.230
with Gian Wild.

00:00:38.480 --> 00:00:39.690
A Little bit about Gian.

00:00:39.690 --> 00:00:44.120
She is the CEO, Founder,
and President of AccessibilityOz,

00:00:44.120 --> 00:00:50.730
established in Australia in 2011,
and in the United States in 2015.

00:00:52.020 --> 00:00:55.820
Gian has worked in the
accessibility industry since 1998.

00:00:55.820 --> 00:01:01.160
She worked on the first triple-A
accessible website in Australia,

00:01:01.160 --> 00:01:04.850
and developed one of the first
automated accessibility testing tool,

00:01:04.850 --> 00:01:07.780
that is PurpleCop in 2000.

00:01:07.780 --> 00:01:11.600
She spent six years
on the Web Content

00:01:11.600 --> 00:01:12.920
Accessibility Guideline group,

00:01:14.750 --> 00:01:21.550
W3C, contributing to the development
of WCAG 2, and is currently a member

00:01:21.550 --> 00:01:23.910
of the Automated WCAG
Monitoring Community Group.

00:01:25.010 --> 00:01:30.050
Gian is in the Higher Education
Content Steering Group

00:01:30.050 --> 00:01:33.060
for Accessibility Switchboard,
as well as a company member

00:01:33.060 --> 00:01:36.540
of the ICT Accessibility
Testing Symposium Conference

00:01:36.541 --> 00:01:37.700
in United States.

00:01:38.860 --> 00:01:42.406
Gian speaks at both web and
accessibility conference

00:01:42.407 --> 00:01:43.610
around the world.

00:01:43.610 --> 00:01:49.910
In 2017, she was nominated
Australian of the Year.

00:01:49.910 --> 00:01:54.360
And in 2019, she won the Inaugural
Accessibility Person of the Year

00:01:54.360 --> 00:01:55.900
in Australia.

00:01:55.900 --> 00:01:59.590
Please feel free to add your
questions in the Zoom Q&A session

00:01:59.590 --> 00:02:02.340
and we will answer them at
the end of this session.

00:02:02.340 --> 00:02:05.160
Use the chat to connect
with your attendees.

00:02:05.160 --> 00:02:05.790
Over to you, Gian.

00:02:07.900 --> 00:02:09.750
 GIAN WILD: Thank you very much.

00:02:09.750 --> 00:02:14.430
So first off, thank you so much
for coming, and please bear

00:02:14.430 --> 00:02:16.900
with my Australian accent.

00:02:16.900 --> 00:02:18.410
I have heard it's quite strong.

00:02:18.410 --> 00:02:25.840
One of the things that I'd just
like to say is this URL is usually

00:02:25.840 --> 00:02:30.130
where you can get all the details
of the slides and any links

00:02:30.130 --> 00:02:33.460
that I might mention,
but for some reason the people

00:02:33.460 --> 00:02:37.550
that run this system let
the [Inaudible 00:02:35]

00:02:37.550 --> 00:02:38.610
URL lapse.

00:02:38.610 --> 00:02:45.220
So I'm putting the actual full
URL into the chat, and I'll do so

00:02:45.220 --> 00:02:46.590
at the end as well.

00:02:46.590 --> 00:02:50.140
And we can maybe send that out to...
I'll put it on the Slack channel

00:02:50.140 --> 00:02:50.460
as well.

00:02:50.460 --> 00:02:53.330
So thank you very
much for having me.

00:02:53.330 --> 00:02:57.020
The very first thing I'd like to
do is acknowledge the Yugora people

00:02:57.020 --> 00:03:00.530
as the traditional
owners of this land.

00:03:00.530 --> 00:03:04.070
I live up near the Gold
Coast; one of the mountains

00:03:04.070 --> 00:03:07.150
around the Gold Coast,
and it was very well known

00:03:07.150 --> 00:03:09.460
as an Indigenous homeland.

00:03:10.680 --> 00:03:13.980
Once again, you can access the
presentation and the links, not

00:03:13.980 --> 00:03:17.920
on that URL, but on the URL
that I’ve put in the chat.

00:03:17.920 --> 00:03:20.890
So first off, I'd like to
introduce you to our team.

00:03:20.890 --> 00:03:24.690
This is our team in 2018,
which is about five years ago now,

00:03:24.690 --> 00:03:26.140
so long time ago.

00:03:26.140 --> 00:03:30.310
And we have changed a little,
but one of the things that I want

00:03:30.310 --> 00:03:36.300
to just emphasize is that we
don't look disabled, any of us.

00:03:36.300 --> 00:03:41.410
And yet at that point,
60% of my staff had some kind

00:03:41.410 --> 00:03:44.530
of significant disability that
affected their daily life.

00:03:44.530 --> 00:03:47.160
I actually hire people
with disabilities.

00:03:47.160 --> 00:03:52.960
We are an Accessibility Consultancy
run by people with disabilities,

00:03:52.960 --> 00:03:54.620
for people with disabilities.

00:03:54.620 --> 00:03:58.140
I've had staffs with a whole
range of different disabilities,

00:03:58.140 --> 00:04:01.580
including dyslexia,
moderate vision impairment,

00:04:01.580 --> 00:04:06.000
severe vision impairment, epilepsy,
migraines, physical impairment,

00:04:06.000 --> 00:04:11.130
fibromyalgia, multiple sclerosis,
Crohn's disease, PTSD, autism,

00:04:11.130 --> 00:04:13.870
and unfortunately, Long COVID.

00:04:13.870 --> 00:04:17.400
And one of the things that
I would like to point out is

00:04:17.400 --> 00:04:20.310
that it's not just
about vision impairment.

00:04:20.310 --> 00:04:23.540
A lot of people, when they're
new, especially to accessibility,

00:04:23.540 --> 00:04:26.110
think it's just about
screen reader accessibility,

00:04:26.110 --> 00:04:28.370
and that is absolutely
not the case.

00:04:28.370 --> 00:04:31.270
So that's the point
I wanted to make.

00:04:31.270 --> 00:04:34.970
Just a little bit about me,
just so you'll maybe take what I have

00:04:34.970 --> 00:04:37.600
to say seriously.

00:04:37.600 --> 00:04:41.690
As the introduction
said, I started in ‘98.

00:04:41.690 --> 00:04:44.710
I worked on the first
accessible website in Australia.

00:04:44.710 --> 00:04:47.390
I’d like to say I started
when I was five years old,

00:04:47.390 --> 00:04:49.270
but that's not actually the case.

00:04:49.270 --> 00:04:52.790
I'm not going to tell you how
old or young I was when I started

00:04:52.790 --> 00:04:53.790
in accessibility.

00:04:55.170 --> 00:04:59.530
I created Australia's first
automated accessibility testing tool,

00:04:59.530 --> 00:05:03.850
was an invited expert to the
W3C, WCAG 2 working group.

00:05:03.850 --> 00:05:06.330
I worked on the 2006
Commonwealth Games.

00:05:06.330 --> 00:05:10.390
In fact, I've worked on all the
Commonwealth Games since then,

00:05:10.390 --> 00:05:14.080
including the Victoria Commonwealth
Games that just got cancelled.

00:05:14.080 --> 00:05:15.510
So that was fun.

00:05:15.510 --> 00:05:19.650
I spent six years managing
usability and accessibility services

00:05:19.650 --> 00:05:24.090
at Monash University and
then founded AccessibilityOz.

00:05:24.090 --> 00:05:28.240
We released Oz Player, our accessible
video player, and then OzArt,

00:05:28.240 --> 00:05:30.870
our automated
accessibility testing tool.

00:05:30.870 --> 00:05:33.960
And then I spoke at the United
Nations on the importance

00:05:33.960 --> 00:05:36.843
of web accessibility,
and was nominated

00:05:36.844 --> 00:05:39.150
for the Australian of the Year,

00:05:39.150 --> 00:05:42.610
and inducted into the Centre
for Accessibility's Hall of Fame

00:05:42.610 --> 00:05:46.220
as Accessibility Person
of the year in 2019.

00:05:46.220 --> 00:05:47.900
Although, the important
thing that I've been doing

00:05:47.900 --> 00:05:54.130
since about 2018 is actually working
on mobile accessibility guidelines.

00:05:54.130 --> 00:05:58.260
So let's talk about that.

00:05:58.260 --> 00:06:04.090
So a little background.

00:06:04.090 --> 00:06:09.040
Why did we develop a mobile
accessibility guidelines?

00:06:09.040 --> 00:06:12.240
So basically, to explain
that, I need to explain

00:06:12.240 --> 00:06:17.470
about the ICT Accessibility Testing
Symposium, which was run every year

00:06:17.470 --> 00:06:21.170
or so before COVID just messed
everything up, and it's aimed

00:06:21.170 --> 00:06:23.220
at accessibility testers.

00:06:23.220 --> 00:06:26.970
And at the end of the
symposium, we have a town hall

00:06:26.970 --> 00:06:31.340
where we talk about what it is
that we as a community need,

00:06:31.340 --> 00:06:32.410
as an industry need.

00:06:32.410 --> 00:06:36.060
And one of the things that
was talked about in 2017,

00:06:36.060 --> 00:06:39.530
was the fact that there was
really no standard advice

00:06:39.530 --> 00:06:44.200
on testing mobile or testing
accessibility on mobile devices.

00:06:44.200 --> 00:06:47.580
That all the different companies
had their own guidelines

00:06:47.580 --> 00:06:52.630
that they followed, and they
weren't really necessarily similar

00:06:52.630 --> 00:06:54.450
in any way.

00:06:54.450 --> 00:06:57.200
So we formed a committee
of which I was a Chair

00:06:57.200 --> 00:07:01.540
to amalgamate all these mobile
accessibility testing standards.

00:07:01.540 --> 00:07:04.681
And we hoped that
would be a one-and-done

00:07:04.682 --> 00:07:09.340
because we knew WCAG 2.1 was
being released in 2018.

00:07:09.340 --> 00:07:10.910
And we thought, Excellent.

00:07:10.910 --> 00:07:14.300
WCAG 2.1 is going to address all
these issues, but here's something

00:07:14.300 --> 00:07:18.900
that we can use in the meantime.
So let's talk about WCAG 2.1.

00:07:19.990 --> 00:07:23.580
But before we talk about WCAG
2.1, we need to talk about WCAG 2.

00:07:23.580 --> 00:07:27.280
So WCAG 2's success criteria
are applicable to mobile.

00:07:27.280 --> 00:07:31.400
So you do need to make sure all
your images have alt attributes

00:07:31.400 --> 00:07:33.470
when you go on mobile site.

00:07:33.470 --> 00:07:38.340
Or make sure all your images have
alternatives or names and et cetera

00:07:38.340 --> 00:07:40.980
if you're creating a native app.

00:07:40.980 --> 00:07:43.327
But not all aspects of
mobile accessibility

00:07:43.328 --> 00:07:46.420
are specifically covered
by WCAG 2.

00:07:46.420 --> 00:07:50.360
For example, although WCAG 2
requires sites to be accessible

00:07:50.360 --> 00:07:53.130
to the keyboard user,
it does not specify

00:07:53.130 --> 00:07:57.020
that it should also be accessible
to the touchscreen user.

00:07:57.020 --> 00:08:00.510
So that's just one area where
it fell short when it came

00:08:00.510 --> 00:08:02.430
to mobile accessibility.

00:08:02.430 --> 00:08:04.740
Of course WCAG 2.1
does build on this,

00:08:04.740 --> 00:08:08.370
and addresses more criteria
specifically around touchscreens,

00:08:08.370 --> 00:08:12.070
pointer gestures, sensors,
small screen devices, et cetera,

00:08:12.070 --> 00:08:15.830
but it really doesn't cover
all the user needs related

00:08:15.830 --> 00:08:17.220
to mobile accessibility.

00:08:18.270 --> 00:08:24.310
So what we did as a group at the
Town Hall in 2018, we sort of,

00:08:24.310 --> 00:08:27.750
as a group, decided that we
were not happy with WCAG 2.1,

00:08:27.750 --> 00:08:31.770
and that we still needed some
mobile accessibility guidelines.

00:08:31.770 --> 00:08:33.530
So we reconvened the committee.

00:08:33.530 --> 00:08:35.770
We actually split it
into two committees.

00:08:35.770 --> 00:08:40.370
We had one for a mobile
site, testing guidelines,

00:08:40.370 --> 00:08:42.160
and a native app
testing guidelines.

00:08:42.160 --> 00:08:45.860
And I was Co-chair on both
of those sets of guidelines.

00:08:45.860 --> 00:08:49.480
And so we spent a bit over
a year working on them,

00:08:49.480 --> 00:08:53.960
and we released them in early
2020, just before COVID.

00:08:53.960 --> 00:08:56.550
I promise you the
two are not related.

00:08:56.550 --> 00:09:00.140
So So that's basically
what I'm talking about now.

00:09:00.140 --> 00:09:05.150
So these methodology that I'll
talk to you about does not include

00:09:05.150 --> 00:09:07.880
those errors already in WCAG 2.

00:09:07.880 --> 00:09:11.250
So it doesn't say, Hey,
your images need alternatives.

00:09:11.250 --> 00:09:14.930
But it does include those
errors in WCAG 2.1, like,

00:09:14.930 --> 00:09:17.210
Hey, your site needs
to be responsive.

00:09:17.210 --> 00:09:19.550
Because we knew that there
would be some organizations

00:09:19.550 --> 00:09:23.230
whose standard was WCAG
2, but they still wanted

00:09:23.230 --> 00:09:26.160
to meet mobile accessibility,
so we didn't want them to miss out

00:09:26.160 --> 00:09:26.630
on anything.

00:09:26.630 --> 00:09:31.720
But it's very clear in the guidelines
if we're referring to WCAG 2.1.

00:09:31.720 --> 00:09:35.120
And then when we were including
all those WCAG 2.1 things,

00:09:35.120 --> 00:09:37.360
we as a committee found
there are some areas

00:09:37.360 --> 00:09:39.940
that we didn't agree with the W3C.

00:09:39.940 --> 00:09:42.830
So it's a little bit different,
and we do spell that out

00:09:42.830 --> 00:09:46.670
in a lot of detail when it comes
to the guidelines themselves.

00:09:46.670 --> 00:09:49.740
So I keep talking
about these guidelines.

00:09:49.740 --> 00:09:52.470
You can find them on our website.

00:09:52.470 --> 00:09:54.370
I'm just going to put
the URL in the chat.

00:09:55.640 --> 00:10:01.070
And basically...
Let me just open it.

00:10:02.100 --> 00:10:03.690
It looks like this.

00:10:08.240 --> 00:10:09.280
No, it doesn't.

00:10:10.180 --> 00:10:11.950
[chuckles]

00:10:11.950 --> 00:10:13.710
It looks like that.

00:10:13.710 --> 00:10:14.820
It looks like this.

00:10:14.820 --> 00:10:18.990
So you got your introduction, which
explains why we've got that note

00:10:18.990 --> 00:10:24.080
on WCAG 2.1, mobile sites versus
native apps, hybrid native apps,

00:10:24.080 --> 00:10:25.540
and the two methodologies.

00:10:25.540 --> 00:10:28.480
So you've got your mobile
site methodology overview,

00:10:28.480 --> 00:10:33.980
and your native app testing
methodology overview.

00:10:33.980 --> 00:10:38.850
So each testing methodology has
five documents associated with it.

00:10:38.850 --> 00:10:42.070
The first one is the
methodology itself.

00:10:42.070 --> 00:10:46.760
So think of that as your WCAG
2, no associated documentation;

00:10:46.760 --> 00:10:48.350
just these are the rules.

00:10:48.350 --> 00:10:49.980
Next, you got your about section.

00:10:49.980 --> 00:10:53.530
So your about document
has things like devices,

00:10:53.530 --> 00:10:56.900
assistive technologies, site
types, variations of the page,

00:10:56.900 --> 00:11:01.310
capturing errors, which is
especially useful in native apps.

00:11:01.310 --> 00:11:05.070
So a lot of kind of
general useful advice.

00:11:05.070 --> 00:11:08.930
Then you've got basically
three methodology documents,

00:11:08.930 --> 00:11:13.180
one on critical test cases,
one on standard test cases,

00:11:13.180 --> 00:11:17.410
and one on test cases for assistive
technologies and mobile features.

00:11:17.410 --> 00:11:19.960
So these are very big,
complex documents.

00:11:19.960 --> 00:11:21.460
You can see 90 megabytes.

00:11:21.460 --> 00:11:25.980
We are working on making
them into a website,

00:11:25.980 --> 00:11:29.150
but we all have lots
of things to do.

00:11:29.150 --> 00:11:37.150
So that's where you get them.

00:11:37.640 --> 00:11:39.740
Let’s talk about mobile issues.

00:11:39.740 --> 00:11:41.630
Why is mobile actually different?

00:11:41.630 --> 00:11:45.892
Well, mobile has a bunch
of accessibility features

00:11:45.893 --> 00:11:48.730
that you don't see
in desktops.

00:11:48.730 --> 00:11:51.000
One of them is the
native screen readers.

00:11:51.000 --> 00:11:54.800
So, yes, you can get
screen readers on desktop.

00:11:54.800 --> 00:11:58.000
And when I talk about desktop,
I mean PC as well as Mac.

00:11:59.530 --> 00:12:02.600
But they're not native,
so people have to purchase them,

00:12:02.600 --> 00:12:04.750
or choose to download them.

00:12:04.750 --> 00:12:07.880
There are some native ones
like Voiceover on Mac,

00:12:07.880 --> 00:12:10.180
but not so much with Windows.

00:12:10.180 --> 00:12:12.460
Whereas when it comes
to mobile devices,

00:12:12.461 --> 00:12:14.240
you have native screen readers,

00:12:14.240 --> 00:12:17.580
and you really only have two screen
readers that you need to worry about.

00:12:17.580 --> 00:12:21.390
TalkBack with Android,
and Voiceover on iOS.

00:12:21.390 --> 00:12:24.750
Samsung, of course, has created its
own, and you've got a different one

00:12:24.750 --> 00:12:27.880
on Amazon Kindle,
and things like that.

00:12:27.880 --> 00:12:31.330
But those are the two main screen
readers you need to worry about.

00:12:31.330 --> 00:12:35.430
Then there are things like volume
control, a haptic keyboard,

00:12:35.430 --> 00:12:40.490
visual auditory, and vibrational
notifications, screen rotation,

00:12:40.490 --> 00:12:45.110
mono audio, voice control,
increased text and display size,

00:12:45.110 --> 00:12:48.890
reduction of motion, zoom,
and reader view, simplified view.

00:12:48.890 --> 00:12:52.070
Now, the interesting thing about
all of these is they're fairly easy

00:12:52.070 --> 00:12:53.160
to access.

00:12:53.160 --> 00:12:55.580
And you'll find that there'll
be a number of people

00:12:55.580 --> 00:12:59.790
who actually use these assisted
technologies who would not identify

00:12:59.790 --> 00:13:01.710
as being someone with a disability.

00:13:01.710 --> 00:13:05.170
So for example, my stepmother's
getting a little bit older

00:13:05.170 --> 00:13:08.713
and she doesn't read
books, novels anymore,

00:13:08.714 --> 00:13:11.210
because the text is too small.

00:13:11.210 --> 00:13:15.290
She reads everything on her phone
because she has figured out,

00:13:15.290 --> 00:13:20.320
on her own accord,
how to increase the text size,

00:13:20.320 --> 00:13:22.680
and so she reads it
all on her phone.

00:13:22.680 --> 00:13:25.400
And that's something that we find

00:13:25.400 --> 00:13:27.690
that users find these
options much more

00:13:27.690 --> 00:13:31.390
so on mobile devices
than they do on desktops.

00:13:32.930 --> 00:13:36.180
Another thing to be aware
of is page variations.

00:13:36.180 --> 00:13:42.630
So as part of WCAG 2, you have to
test for anything zooming to 200%.

00:13:42.630 --> 00:13:45.540
So you need to make sure that
if you increase your text size

00:13:45.540 --> 00:13:49.730
or you zoom to 200%,
that everything should still work.

00:13:49.730 --> 00:13:53.660
However, this has actually
created a bit of a problem

00:13:53.660 --> 00:13:56.220
since we've introduced
these mobile devices.

00:13:56.220 --> 00:13:59.930
Because low vision users who
use the zoom function inherent

00:13:59.930 --> 00:14:02.330
in the browser,
often end up getting restricted

00:14:02.330 --> 00:14:04.690
to a mobile view of the
site on their desktop

00:14:04.690 --> 00:14:06.510
as opposed to just
making everything larger.

00:14:07.560 --> 00:14:12.230
So therefore it's essential that
functionality is not removed

00:14:12.230 --> 00:14:14.140
due to a variation in the page.

00:14:14.140 --> 00:14:16.150
Now, what do I mean by that?

00:14:16.150 --> 00:14:18.300
This is an example, an old example.

00:14:18.300 --> 00:14:19.570
It's just a very, very good one.

00:14:19.570 --> 00:14:20.780
They have fixed this.

00:14:20.780 --> 00:14:22.130
But this is YouTube.

00:14:22.130 --> 00:14:26.720
So this is the YouTube website
from, like, 2018, and you can see

00:14:26.720 --> 00:14:29.520
in the top right hand
corner you have your upload

00:14:29.520 --> 00:14:31.180
and notifications button.

00:14:31.180 --> 00:14:36.660
But if you, on the desktop, increase
the size, so just go control plus

00:14:36.660 --> 00:14:40.900
until it hits 200%,
you'll find those things disappear.

00:14:40.900 --> 00:14:42.670
Now why do they disappear?

00:14:42.670 --> 00:14:46.660
They disappear because whoever's
coded the back end thinks, OK,

00:14:46.660 --> 00:14:49.320
if you're looking at it this
size, you actually looking at it

00:14:49.320 --> 00:14:51.160
on a mobile device.

00:14:51.160 --> 00:14:54.400
So we don't want you to upload
videos on the mobile browser,

00:14:54.400 --> 00:14:57.510
we want you to download
the app to upload videos.

00:14:57.510 --> 00:15:00.090
But of course someone
who has low vision

00:15:00.090 --> 00:15:04.170
and who has just increased zoom
on the desktop is not going

00:15:04.170 --> 00:15:05.610
to able too upload videos.

00:15:05.610 --> 00:15:07.500
So that's the kind of thing
that we're talking about.

00:15:07.500 --> 00:15:11.990
So you need to make sure that
whatever you see on one version

00:15:11.990 --> 00:15:16.700
or variation of the page is available
on all other variations of the page.

00:15:16.700 --> 00:15:19.500
And you can hide them in
certain ways behind accordion,

00:15:19.500 --> 00:15:22.610
and things like that,
but it still needs to be all there.

00:15:23.870 --> 00:15:26.310
Another thing that's really
important when it comes

00:15:26.310 --> 00:15:29.890
to mobile is the concept
of accessibility supported.

00:15:29.890 --> 00:15:33.290
This is a WCAG 2 concept,
which basically says

00:15:33.290 --> 00:15:37.270
that implementation techniques that
support assistive technology used

00:15:37.270 --> 00:15:39.540
on mobile devices such as
TalkBack, Voiceover,

00:15:39.540 --> 00:15:42.630
and Switch Control are supported.

00:15:42.630 --> 00:15:46.870
Basically, what this means is
that when it come to testing,

00:15:46.870 --> 00:15:51.430
especially with native apps, but
also when it comes to mobile sites,

00:15:51.430 --> 00:15:56.250
you must test with assistive
technologies that are on the devices.

00:15:56.250 --> 00:15:59.280
And I'll talk about those
assistive technologies later.

00:16:00.460 --> 00:16:04.350
But it's absolutely essential
that you actually do that testing.

00:16:04.350 --> 00:16:06.340
So if someone's
[Inaudible 00:16:05]

00:16:06.340 --> 00:16:09.750
WCAG 2 tester,
they can often get away

00:16:09.750 --> 00:16:12.800
without actually doing any testing
with assistive technologies.

00:16:12.800 --> 00:16:15.500
But as soon as you're looking
at a mobile device, you have

00:16:15.500 --> 00:16:17.390
to really do that testing.

00:16:17.390 --> 00:16:19.540
I was always a purist.

00:16:19.540 --> 00:16:22.250
I was always someone
who said the only person

00:16:22.250 --> 00:16:25.610
who should really be testing with
an assistive technology is someone

00:16:25.610 --> 00:16:27.090
who uses it every day.

00:16:27.090 --> 00:16:32.270
Because I can see the screen
so I know I have an expectation

00:16:32.270 --> 00:16:34.730
of what it is that
I'm going to hear.

00:16:34.730 --> 00:16:39.830
For example, when we did some
testing a while back, we found

00:16:39.830 --> 00:16:44.440
that a lot of screen-reader users
didn't understand the go button next

00:16:44.440 --> 00:16:45.290
to the search bar.

00:16:45.290 --> 00:16:47.640
So you'd have a search bar
in the top right hand corner,

00:16:47.640 --> 00:16:50.650
which often wouldn't be labeled,
and then you'd have a button

00:16:50.650 --> 00:16:51.730
that said go.

00:16:51.730 --> 00:16:53.520
And visual users would
look at it and go,

00:16:53.520 --> 00:16:56.150
Oh, yes,
it's just a search bar and hit go.

00:16:56.150 --> 00:16:58.240
So even if they were testing
with a screen reader,

00:16:58.240 --> 00:16:59.890
they wouldn't find
any problem with it.

00:16:59.890 --> 00:17:05.190
Hey, it's a search field,
but it's got a label

00:17:05.190 --> 00:17:06.480
through the button called go.

00:17:06.480 --> 00:17:11.030
Whereas the screen reader users
would be, like, What does ‘go’ mean?

00:17:11.030 --> 00:17:15.090
Where are we going? So it's really
important, I believe, to test

00:17:15.090 --> 00:17:17.530
with users of
assistive technologies.

00:17:17.530 --> 00:17:21.250
As an organization, we still
follow that through when it comes

00:17:21.250 --> 00:17:25.190
to screen readers,
but it really isn't possible

00:17:25.190 --> 00:17:30.940
to get a native switch user and a
native keyboard user, et cetera.

00:17:30.940 --> 00:17:34.360
So it really does mean,
when it comes to mobile testing,

00:17:34.360 --> 00:17:37.370
you have to start learning these
assistive technologies yourself.

00:17:39.740 --> 00:17:42.200
Now let’s talk about
testing methods.

00:17:43.220 --> 00:17:48.770
There are four main testing
methods in mobile site testing.

00:17:48.770 --> 00:17:52.480
So testing on the devices,
so mobile and tablet devices.

00:17:52.480 --> 00:17:57.270
Testing on the devices with assistive
technology; testing on mobile

00:17:57.270 --> 00:17:59.670
and tablet devices with
assistive technologies.

00:17:59.670 --> 00:18:00.810
Responsive windows.

00:18:00.810 --> 00:18:05.230
So testing on a desktop with
a responsibly-sized window.

00:18:05.230 --> 00:18:08.600
Now, if you're, like, I have no
idea what she's talking about,

00:18:08.600 --> 00:18:12.310
then look at the documentation that
goes into it in a lot of detail.

00:18:12.310 --> 00:18:14.970
The last one is testing on desktop.

00:18:14.970 --> 00:18:17.100
Now, when it comes to native
apps, there are

00:18:17.100 --> 00:18:20.620
only two main testing
methods: testing on devices,

00:18:20.620 --> 00:18:23.440
and testing on devices with
assistive technologies.

00:18:23.440 --> 00:18:30.690
We strongly, strongly recommend
that you do not use simulators.

00:18:30.690 --> 00:18:34.930
You need to use actual devices,
ones that you hold in your hand,

00:18:34.930 --> 00:18:39.480
because simulators are not very
good at actually simulating.

00:18:39.480 --> 00:18:42.570
Though they might be OK if
you're just looking at a website

00:18:43.600 --> 00:18:45.812
or a native app; but
as soon as you bring

00:18:45.813 --> 00:18:47.550
in those assistive technologies,

00:18:47.550 --> 00:18:48.630
it all goes out the window.

00:18:48.630 --> 00:18:52.780
So you absolutely need to have
real, actual devices.

00:18:52.780 --> 00:18:55.500
Now, this is just an example
to show you why you need

00:18:55.500 --> 00:18:57.620
to have a real actual device.

00:18:57.620 --> 00:19:02.450
So this is a really old example from
2014, back before there was Wi-Fi

00:19:02.450 --> 00:19:03.810
on airplanes.

00:19:03.810 --> 00:19:06.330
And [Inaudible 00:19:05]

00:19:06.330 --> 00:19:10.280
the flight from Australia to
the US is about 14,15 hours,

00:19:10.280 --> 00:19:14.960
which is a really long time,
especially without internet as well.

00:19:14.960 --> 00:19:17.900
So one of the things is we'd
land, and would sit on the tarmac

00:19:17.900 --> 00:19:21.280
for an hour or two, waiting
for a gate to become available,

00:19:21.280 --> 00:19:25.160
because of the winds and things,
they wouldn't know exactly

00:19:25.160 --> 00:19:26.840
when a flight would land.

00:19:26.840 --> 00:19:29.300
And the wonderful thing is that
when you're sitting in the tarmac

00:19:29.300 --> 00:19:33.290
of LA, you used to be able
to access the LAX Wi-Fi.

00:19:33.290 --> 00:19:35.410
However, this is what it says.

00:19:35.410 --> 00:19:39.180
When you actually put in the
details to log in, it says,

00:19:39.180 --> 00:19:42.850
This page will redirect.
So content doesn't really make sense

00:19:42.850 --> 00:19:44.140
to have here.

00:19:44.140 --> 00:19:45.430
Now, how does that happen?

00:19:45.430 --> 00:19:47.670
That happens because
someone used a simulator.

00:19:47.670 --> 00:19:50.310
That's happened because
someone was testing on desktop,

00:19:50.310 --> 00:19:53.500
not an actual device,
not in an actual location.

00:19:53.500 --> 00:19:58.130
So these are the things, and I have
a whole bunch of examples like this.

00:19:58.130 --> 00:20:01.480
If you're interested,
I'll put it in the chat at the end.

00:20:02.790 --> 00:20:05.950
There's a video from
around that time,

00:20:05.950 --> 00:20:10.950
2014 to 2016 called Mobile
Accessibility: the Good, the Bad,

00:20:10.950 --> 00:20:14.560
and the Ugly.
There’s just all of these examples.

00:20:14.560 --> 00:20:18.630
So this is why you absolutely
have to test with real devices.

00:20:20.040 --> 00:20:23.530
It’s such an important thing to
me that my two dogs have gotten up

00:20:23.530 --> 00:20:26.420
from sleeping to kind of find
out if I'm OK, because they're,

00:20:26.420 --> 00:20:28.450
like, Oh, my God, she's really
worried about something.

00:20:30.170 --> 00:20:33.290
OK, so let's talk about
the methodologies.

00:20:33.290 --> 00:20:35.717
Both methodologies have five steps,

00:20:35.718 --> 00:20:38.490
and these actual
specific requirements

00:20:38.490 --> 00:20:40.250
under each steps would change.

00:20:40.250 --> 00:20:44.670
But four of the steps are the
same, and step two is the one

00:20:44.670 --> 00:20:45.330
that is different.

00:20:45.330 --> 00:20:48.672
So when it comes to
mobile site testing,

00:20:48.673 --> 00:20:51.280
step one is identified devices;

00:20:51.280 --> 00:20:55.590
step two, identify site types
and variations; step three,

00:20:55.590 --> 00:21:00.020
test critical issues; step four,
test mobile specific issues;

00:21:00.020 --> 00:21:05.070
and step five, test mobile assistive
technology and feature support.

00:21:05.070 --> 00:21:09.370
The steps are all named the same
except for step two, which is,

00:21:09.370 --> 00:21:11.470
defined application functionality.

00:21:12.880 --> 00:21:15.790
Step one: identify devices.

00:21:15.790 --> 00:21:19.790
One thing to remember is that
in the United States, Australia,

00:21:19.790 --> 00:21:24.040
and other western countries, iOS
devices tend to be the most popular.

00:21:24.040 --> 00:21:27.870
However, in Asia and other eastern
countries, Android devices tend

00:21:27.870 --> 00:21:29.120
to be the most popular.

00:21:29.120 --> 00:21:33.350
So to best find the devices
you really want to focus on,

00:21:33.350 --> 00:21:36.490
definitely look at that Google
Analytics, or other analytics systems

00:21:36.490 --> 00:21:40.550
that you might have,
but that's just a general guide.

00:21:40.550 --> 00:21:43.970
Be aware that due to the
popularity of the Android system,

00:21:43.970 --> 00:21:46.840
there are tens of thousands
of Android operating system,

00:21:46.840 --> 00:21:48.600
and browse the
combinations available.

00:21:48.600 --> 00:21:52.760
It's absolutely not possible to
test on all of those systems.

00:21:52.760 --> 00:21:55.700
So the best thing to do when
you're testing a mobile site

00:21:55.700 --> 00:21:59.530
on an Android phone
is to download Chrome.

00:21:59.530 --> 00:22:05.790
Now, Samsung comes packaged with what
they call an Internet Browser app.

00:22:05.790 --> 00:22:08.250
Don’t test with that because
that will show you exactly

00:22:08.250 --> 00:22:11.530
what the errors you’re likely
to find on a Samsung phone

00:22:11.530 --> 00:22:13.150
with the internet browser.

00:22:13.150 --> 00:22:16.670
It's a much better representation
if you download Chrome

00:22:16.670 --> 00:22:17.670
and test with that.

00:22:19.150 --> 00:22:22.120
Be aware that even if the
site is a desktop site,

00:22:22.120 --> 00:22:26.000
people will still use that
desktop site on mobile.

00:22:26.000 --> 00:22:29.290
iOS has this funky little feature,
which is if you don't like

00:22:29.290 --> 00:22:31.990
what you're seeing,
it says show desktop site.

00:22:31.990 --> 00:22:36.120
So you need to test the
desktop site on mobile.

00:22:36.120 --> 00:22:38.410
You need to test the
mobile site on desktop.

00:22:38.410 --> 00:22:40.270
It's a whole big thing.

00:22:40.270 --> 00:22:41.610
It's got lots and lots of testing.

00:22:41.610 --> 00:22:43.780
It's unfortunate,
but that's the way you have to go.

00:22:45.340 --> 00:22:49.530
The other thing to remember is that
there are assistive technologies

00:22:49.530 --> 00:22:52.740
that work across desktop
and mobile devices.

00:22:52.740 --> 00:22:55.730
Like there's this thing called
Voiceover, which is a screen reader.

00:22:55.730 --> 00:22:59.270
However, if you tested a
site with Voiceover on Mac,

00:22:59.270 --> 00:23:03.830
that is not the same as testing
it with Voiceover on iOS,

00:23:03.830 --> 00:23:05.810
because you will get
completely different results.

00:23:05.810 --> 00:23:07.990
So those two are not the same.

00:23:07.990 --> 00:23:10.570
It is interesting to
have a look at the latest

00:23:10.570 --> 00:23:14.960
WebAIM screen-reader survey,
which shows you usage

00:23:14.960 --> 00:23:18.850
and things like that, but really
Voiceover and TalkBack are

00:23:18.850 --> 00:23:20.490
what you need to look at.

00:23:20.490 --> 00:23:23.730
Yes, there are additional screen
readers like Voice Assistant

00:23:24.870 --> 00:23:28.120
in Samsung, but TalkBack is
still available, and people

00:23:28.120 --> 00:23:33.280
who really use their screen
readers day in, day out,

00:23:33.280 --> 00:23:36.720
are more likely use
to use TalkBack.

00:23:36.720 --> 00:23:39.405
Amazon Kindle Fire also has a
different screen reader called

00:23:39.406 --> 00:23:40.300
VoiceView.

00:23:40.300 --> 00:23:42.980
These are things that you
only need to worry about

00:23:42.980 --> 00:23:46.460
if your analytics are saying,
Hey, 90% of our mobile users

00:23:46.460 --> 00:23:48.230
are Samsung users.

00:23:48.230 --> 00:23:50.870
Or if you've got something
that will end up being shown

00:23:50.870 --> 00:23:52.540
on an Amazon Kindle Fire.

00:23:52.540 --> 00:23:56.340
So what we recommend is
that you test on an iPhone

00:23:56.340 --> 00:24:00.240
if it's a mobile site with Safari,
on an iPad if it's a mobile site

00:24:00.240 --> 00:24:04.120
with Safari, and an Android phone
if it's a mobile site with Chrome.

00:24:04.120 --> 00:24:06.590
Now, it's important to test
with an iPhone and an iPad

00:24:06.590 --> 00:24:09.480
because they're actually
different operating systems.

00:24:09.480 --> 00:24:12.430
And also the expectation,
even though you need to test

00:24:12.430 --> 00:24:16.860
with both orientations is that
with an iPhone, you see portrait;

00:24:16.860 --> 00:24:19.520
and on Android,
you tend to see landscape.

00:24:19.520 --> 00:24:21.790
So it is important to
test with both of those.

00:24:23.240 --> 00:24:26.590
Other devices to consider are
things like the Android, tablet,

00:24:26.590 --> 00:24:30.850
and Chrome, and alternative
devices such as the Kindle device,

00:24:30.850 --> 00:24:32.750
if you know people
are going to use them.

00:24:34.040 --> 00:24:38.590
We recommend testing on the
latest version of iOS and iPad OS,

00:24:38.590 --> 00:24:41.150
and testing on the latest
two versions of Android.

00:24:41.150 --> 00:24:44.610
But really, you can get away with
testing on just the latest version

00:24:44.610 --> 00:24:45.790
of Android.

00:24:45.790 --> 00:24:49.600
When a site is directly aimed
at people with a particular kind

00:24:49.600 --> 00:24:53.090
of disability,
consider including assistive devices

00:24:53.090 --> 00:24:55.730
and technologies used
by potential users.

00:24:55.730 --> 00:24:59.090
So if you have a site about acquired
brain injuries, for example,

00:24:59.090 --> 00:25:01.800
then you want to have
users that are reliant

00:25:01.800 --> 00:25:05.740
on speech-recognition technologies
like Dragon Naturally Speaking;

00:25:05.740 --> 00:25:08.820
people who are native users
of those technologies.

00:25:10.930 --> 00:25:13.480
I didn't mention this before,
which I know I didn't.

00:25:13.480 --> 00:25:16.630
You need to meet WCAG 2 and
this mobile testing methodology.

00:25:16.630 --> 00:25:19.380
So you can't just follow the
mobile testing methodology

00:25:19.380 --> 00:25:21.950
and think your mobile stuff
is going to be accessible,

00:25:21.950 --> 00:25:23.480
you have to meet WCAG 2 as well.

00:25:24.800 --> 00:25:31.790
So step two for a mobile site is,
identify site type and variations

00:25:31.790 --> 00:25:33.000
of the page.

00:25:33.000 --> 00:25:37.280
So the first thing to do is
determine if the site is a desktop,

00:25:37.280 --> 00:25:41.340
M dot, or a responsive website;
and if the site is a responsive,

00:25:41.340 --> 00:25:43.850
are there variations of a page?

00:25:43.850 --> 00:25:47.330
So a desktop website is one
that has only one display,

00:25:47.330 --> 00:25:50.860
whether viewed on desktop
or mobile or tablet device.

00:25:50.860 --> 00:25:52.760
M dot sites have a
particular display,

00:25:52.760 --> 00:25:56.080
and it's actually a completely
different website for mobile

00:25:56.080 --> 00:25:57.350
and tablet sites.

00:25:57.350 --> 00:25:59.830
And you actually end
up having two websites,

00:25:59.830 --> 00:26:03.220
you have your M dot site and
your www site, and you have

00:26:03.220 --> 00:26:07.130
to test your M dot site
on desktop and on mobile,

00:26:07.130 --> 00:26:10.860
and your www site on
desktop and mobile.

00:26:12.480 --> 00:26:15.780
Responsive websites, which changes
depending on the screen size,

00:26:15.780 --> 00:26:18.430
or other feature determined
by the developer.

00:26:18.430 --> 00:26:22.230
And in fact, in the methodology,
we say that responsive websites

00:26:22.230 --> 00:26:27.210
can only change due to screen
size, not spoofing, not determining

00:26:27.210 --> 00:26:30.330
if it's an iOS or whatever.

00:26:30.330 --> 00:26:33.370
If you’re, like, I have no
idea what she's talking about,

00:26:33.370 --> 00:26:36.820
once again, all these things
are in the documentation in lots

00:26:36.820 --> 00:26:41.200
of detail how you can identify these
things, step by step instructions,

00:26:41.200 --> 00:26:42.980
et cetera.

00:26:42.980 --> 00:26:47.240
Step two for native apps is,
define application functionality.

00:26:47.240 --> 00:26:50.980
So through your understanding of
the purpose of the native app,

00:26:50.980 --> 00:26:54.610
define which functionality is
critical to its purpose and use,

00:26:54.610 --> 00:26:58.020
and it must be tested for
efficacy, operability, and workflow

00:26:58.020 --> 00:27:00.330
from a user experience perspective.

00:27:00.330 --> 00:27:02.030
So what do we mean by that?

00:27:02.030 --> 00:27:05.080
Let's think about, say,
a company like Wells Fargo.

00:27:05.080 --> 00:27:09.720
Wells Fargo has a website,
and Wells Fargo's website

00:27:09.720 --> 00:27:13.230
will have information like
its share price, how to apply

00:27:13.230 --> 00:27:18.660
for jobs, how to make a
complaint, how to get a home loan,

00:27:18.660 --> 00:27:20.930
how to purchase shares, maybe.

00:27:22.050 --> 00:27:24.510
It has a whole lot of information.

00:27:24.510 --> 00:27:27.880
However, Wells Fargo probably
only has one native app,

00:27:27.880 --> 00:27:31.180
and it's probably about how
you bank with Wells Fargo.

00:27:31.180 --> 00:27:35.710
So it has a lot less information
and it's much more streamlined

00:27:35.710 --> 00:27:40.280
when it comes to native apps, which
is why you have to test differently,

00:27:40.280 --> 00:27:43.590
or identify the sections that
you need to test differently.

00:27:43.590 --> 00:27:47.510
So ask the question,
How would the experience be impacted

00:27:47.510 --> 00:27:51.230
if the functionality failed?
The content could not be reached,

00:27:51.230 --> 00:27:54.670
and/or the experience caused
a barrier to the user?

00:27:54.670 --> 00:27:57.010
And then, of course, all
functionality should be accessible

00:27:57.010 --> 00:27:58.060
within the native app.

00:27:58.060 --> 00:28:00.242
However, it is important to define

00:28:00.243 --> 00:28:02.810
and include the
critical functionality

00:28:02.810 --> 00:28:06.570
for each individual app to
be prioritized in testing.

00:28:06.570 --> 00:28:10.060
Then there are common elements
to test; things like navigation,

00:28:10.060 --> 00:28:14.900
landing screens, emergency sections,
login flows, settings, accounts,

00:28:14.900 --> 00:28:19.930
and profiles, contact us, real-time
updates, privacy policy, terms

00:28:19.930 --> 00:28:24.340
and conditions, interaction or
functionality, help section, widgets,

00:28:24.340 --> 00:28:31.940
calendars, Geolocational maps,
high traffic areas, et cetera.

00:28:31.940 --> 00:28:34.420
Step three is test critical issues.

00:28:34.420 --> 00:28:39.510
So in step three,
we are all about what we call traps.

00:28:39.510 --> 00:28:44.690
So new features on mobile devices,
of course, means new traps.

00:28:44.690 --> 00:28:48.580
A trap is where a user is
trapped within a component

00:28:48.580 --> 00:28:52.880
and cannot escape without
closing the browser or the app.

00:28:52.880 --> 00:28:55.480
There is a very well
known trap on desktop

00:28:55.480 --> 00:28:57.030
and it's called the keyboard trap.

00:28:57.030 --> 00:29:03.510
You tab into something, like a
video player in Firefox in 2009,

00:29:03.510 --> 00:29:05.390
and you can't tab out.

00:29:05.390 --> 00:29:07.910
You can't tab backwards out,
you can't tab forwards out.

00:29:07.910 --> 00:29:12.530
The only way to get out of the
video player is to close the browser

00:29:12.530 --> 00:29:16.380
and start again, and that's
actually why we built OzPlayer.

00:29:16.380 --> 00:29:20.470
So that's the only non-trap back
then when it came to desktop.

00:29:20.470 --> 00:29:24.550
However, there are many
more traps on mobile sites,

00:29:24.550 --> 00:29:27.610
and we have identified
five of them.

00:29:27.610 --> 00:29:31.610
The exit trap, the swipe/scroll
trap, the text-to-speech trap,

00:29:31.610 --> 00:29:34.440
the headset trap,
and the layer trap.

00:29:34.440 --> 00:29:36.730
So we're going to go
through these now.

00:29:36.730 --> 00:29:39.660
So the exit trap, in short,
there is always an accessible,

00:29:39.660 --> 00:29:41.180
actionable item, e.g.

00:29:41.180 --> 00:29:43.980
a close button that meets
color contrast requirements

00:29:43.980 --> 00:29:45.340
and has an accessible name.

00:29:46.570 --> 00:29:49.570
The close is any feature that
overlays the current page,

00:29:49.570 --> 00:29:51.290
such as full-page ad.

00:29:51.290 --> 00:29:55.310
This applies to all users,
and the methodology is mobile site

00:29:55.310 --> 00:29:57.040
and native app.

00:29:57.040 --> 00:29:58.410
So this is an example here.

00:30:01.670 --> 00:30:05.870
The URL at the top,
Dailyduck.com, is not editable.

00:30:05.870 --> 00:30:08.790
The back button does not
work for some reason.

00:30:08.790 --> 00:30:11.480
And the only way to
actually get rid of this ad,

00:30:11.480 --> 00:30:16.170
which overlays the entire page, is to
somehow scroll that very small area

00:30:16.170 --> 00:30:19.930
at the bottom,
which is impossible to access.

00:30:19.930 --> 00:30:23.590
And if you scroll on
the actual ad itself,

00:30:23.590 --> 00:30:26.770
you will actually activate
the ad and end up purchasing

00:30:26.770 --> 00:30:30.460
an HP EliteBook Folio.

00:30:30.460 --> 00:30:34.480
This is another example, which,
of course, we have all come across,

00:30:34.480 --> 00:30:37.410
which is a pop-up, you know,
wants to advertise something,

00:30:37.410 --> 00:30:39.970
usually when you
first go to a website.

00:30:39.970 --> 00:30:42.469
And the close button
is just impossible

00:30:42.470 --> 00:30:44.280
in some way, shape, or form.

00:30:44.280 --> 00:30:47.370
In this example, it doesn't meet
the color contrast requirements

00:30:47.370 --> 00:30:49.420
and touch target size requirements.

00:30:49.420 --> 00:30:54.520
But sometimes it's
white or light grey,

00:30:54.520 --> 00:30:57.260
sometimes the close
button isn't really there.

00:30:57.260 --> 00:30:59.060
We've seen these all before.

00:30:59.060 --> 00:31:02.480
They're really dark UX patterns
as opposed to, I suppose,

00:31:02.480 --> 00:31:06.200
accessibility issues,
but they cause accessibility issues.

00:31:06.200 --> 00:31:10.240
So these are things that we
have identified as traps.

00:31:10.240 --> 00:31:12.440
Then there is the
swipe/scroll trap.

00:31:12.440 --> 00:31:16.090
So ensure you do not override
standard mobile touch functions,

00:31:16.090 --> 00:31:19.460
swiping, scrolling, et cetera,
on the majority of the page.

00:31:19.460 --> 00:31:24.010
So this applies to touch users, and
the methodology is both mobile site

00:31:24.010 --> 00:31:25.370
and native app.

00:31:25.370 --> 00:31:26.700
Now this is an old example.

00:31:26.700 --> 00:31:30.290
It's one of the very first
examples from my mobile,

00:31:30.290 --> 00:31:32.750
when I started talking
about mobile accessibility.

00:31:32.750 --> 00:31:34.580
I call it the zoom of doom.

00:31:34.580 --> 00:31:39.730
And basically, if you scroll anywhere
on the map, it scrolls the map.

00:31:39.730 --> 00:31:42.040
If you want to scroll up and
down the rest of the page...

00:31:42.040 --> 00:31:47.230
Because this is just
a map on a page.

00:31:47.230 --> 00:31:51.940
It’s not just a map; it's a map
which has content above and below it.

00:31:51.940 --> 00:31:55.050
You have to somehow scroll
these small areas of light.

00:31:57.310 --> 00:31:59.500
Then we have a text-to-speech trap.

00:31:59.500 --> 00:32:04.270
If the app has an ability to
provide content via text-to-speech,

00:32:04.270 --> 00:32:08.100
the screen-reader user must be able
to pause or stop the app speaking

00:32:08.100 --> 00:32:09.820
in a simple manner, e.g.

00:32:09.820 --> 00:32:12.820
by performing a
swipe on the screen.

00:32:12.820 --> 00:32:16.420
So this applies to screen-reader
users, and it's the native app.

00:32:16.420 --> 00:32:20.060
However, we are seeing it
on mobile sites now too.

00:32:20.060 --> 00:32:23.850
This is an example
here, which is pocket.

00:32:23.850 --> 00:32:27.150
Basically, you can play an
article, but if you want

00:32:27.150 --> 00:32:30.180
to stop the article from
playing, you have to tap

00:32:30.180 --> 00:32:33.290
through the page again and
get to the pause button,

00:32:33.290 --> 00:32:36.360
which of course is very difficult
if you're a screen-reader user,

00:32:36.360 --> 00:32:41.290
because your screen reader is
talking over the actual article

00:32:41.290 --> 00:32:42.020
being spoken.

00:32:42.020 --> 00:32:44.690
So basically,
it's impossible to do.

00:32:44.690 --> 00:32:47.130
So it's another thing
to watch out for.

00:32:47.130 --> 00:32:49.380
Then we have the headset trap.

00:32:49.380 --> 00:32:53.910
So headset users must always
be able to pause media, audio,

00:32:53.910 --> 00:32:58.100
or video content by using the
pause/play control on the headset.

00:32:58.100 --> 00:33:00.950
So this is screen reader
users and headset users,

00:33:00.950 --> 00:33:03.060
and it's both methodologies.

00:33:03.060 --> 00:33:05.290
This is an example here.

00:33:05.290 --> 00:33:09.180
You go to a website, and a video
pops up in the bottom corner,

00:33:09.180 --> 00:33:10.840
because why not?

00:33:10.840 --> 00:33:16.420
And the video has
audio, by the way.

00:33:16.420 --> 00:33:20.360
If you're a visual user,
you can tap on the mute button

00:33:20.360 --> 00:33:23.040
and it will mute that video.

00:33:23.040 --> 00:33:26.710
But if you're a screen-reader user,
you have the same issue as before.

00:33:26.710 --> 00:33:28.600
You have to somehow
find that mute button

00:33:28.600 --> 00:33:30.790
while your screen reader
is talking to you,

00:33:30.790 --> 00:33:32.740
and while the video is
speaking to you as well.

00:33:34.390 --> 00:33:36.220
Lastly, we have a layer trap.

00:33:37.470 --> 00:33:40.630
The user should not be
trapped on non-visible layers.

00:33:40.630 --> 00:33:43.810
So this applies to all users,
mostly encountered, though,

00:33:43.810 --> 00:33:47.270
by screen-reader users and
sometimes keyboard users,

00:33:47.270 --> 00:33:49.170
and it's both methodologies.

00:33:49.170 --> 00:33:53.060
So this is an example here
where if you open the menu,

00:33:53.060 --> 00:33:56.700
the user is stuck on a
page underneath the menu.

00:33:56.700 --> 00:33:59.980
So if you're a keyboard
user, you're tabbing

00:33:59.980 --> 00:34:01.520
on the page underneath the menu.

00:34:01.520 --> 00:34:05.400
If you're a screen-reader user,
you can only hear the content

00:34:05.400 --> 00:34:06.340
underneath the menu.

00:34:06.340 --> 00:34:07.790
So that's a layer trap.

00:34:15.060 --> 00:34:19.360
Step four is test mobile
and specific issues.

00:34:19.360 --> 00:34:24.650
And there are specific categories
in step four, so alternatives,

00:34:24.650 --> 00:34:28.363
display, actionable
items, navigational aids,

00:34:28.364 --> 00:34:30.220
audio and video forms;

00:34:30.220 --> 00:34:35.740
and for mobile sites only, there
is mobile and desktop interaction.

00:34:35.740 --> 00:34:39.050
So let's see an example
from the document.

00:34:39.050 --> 00:34:41.380
This example is touch gestures.

00:34:41.380 --> 00:34:46.150
So the rule is any touch gesture
must have an alternative accessible,

00:34:46.150 --> 00:34:47.490
actionable item.

00:34:47.490 --> 00:34:52.200
And for more information, see Success
Criterion 2.5.1: pointer gestures.

00:34:52.200 --> 00:34:57.110
This is very similar to an
existing WCAG 2.1 criteria.

00:34:57.110 --> 00:34:58.960
So what is a touch gesture?

00:34:58.960 --> 00:35:03.040
Touch gesture is swiping up and
down or left and right, dragging up

00:35:03.040 --> 00:35:06.960
and down or left and right,
double tapping, tap and hold,

00:35:06.960 --> 00:35:11.650
tap and swipe, two-pinch
zoom, and press and long hold.

00:35:11.650 --> 00:35:15.648
An example of an alternative
accessible gesture is a link,

00:35:15.649 --> 00:35:20.720
a button, a drop down, or a separate
page with the same functionality.

00:35:20.720 --> 00:35:23.060
So what is it about
this requirement?

00:35:23.060 --> 00:35:24.820
Why do we have this requirement?

00:35:24.820 --> 00:35:28.250
This requirement is particularly
important for screen-reader users.

00:35:28.250 --> 00:35:31.360
For example, if you require
your user to swipe right

00:35:31.360 --> 00:35:34.220
to complete a purchase,
when the screen reader is on,

00:35:34.220 --> 00:35:37.830
the swipe-right gesture moves
you to the next focusable item

00:35:37.830 --> 00:35:39.930
and doesn't complete the purchase.

00:35:39.930 --> 00:35:43.240
You must be able to perform the
same action by using a link,

00:35:43.240 --> 00:35:45.570
an up or down swipe,
or some other gesture.

00:35:46.840 --> 00:35:51.240
Please note this requirement is
similar to the exit trap requirement.

00:35:51.240 --> 00:35:53.488
A failure of the
exit trap requirement

00:35:53.489 --> 00:35:56.830
is that a user cannot escape
from content or a page.

00:35:56.830 --> 00:35:59.410
A failure of the touch
gestures requirement is

00:35:59.410 --> 00:36:02.070
that the user cannot
choose content or a page,

00:36:02.070 --> 00:36:04.690
i.e. they are not trapped.

00:36:04.690 --> 00:36:05.730
So how to test?

00:36:06.900 --> 00:36:10.370
Each one of our requirements
has a how to test section,

00:36:10.370 --> 00:36:12.610
some more detailed than others.

00:36:12.610 --> 00:36:14.270
This one's fairly straightforward.

00:36:14.270 --> 00:36:16.810
So identify any site controls.

00:36:16.810 --> 00:36:19.190
If they require any of
the following gestures,

00:36:19.190 --> 00:36:23.180
is there an accessible, actionable
item provided as an alternative?

00:36:23.180 --> 00:36:27.930
So these touch gestures are swiping
up and down or left and right,

00:36:27.930 --> 00:36:30.900
or dragging up and down or
left and right, double tapping

00:36:30.900 --> 00:36:34.940
or two-pinch zoom, tap and hold,
or tap and swipe, and press

00:36:34.940 --> 00:36:36.170
and long hold.

00:36:36.170 --> 00:36:39.980
So let's see some examples, and
these examples are in the documents

00:36:39.980 --> 00:36:41.340
as well.

00:36:41.340 --> 00:36:44.530
So you can really see
what it is that we mean.

00:36:44.530 --> 00:36:48.603
So this is an example where
the alternative is provided

00:36:48.604 --> 00:36:49.960
on another page.

00:36:49.960 --> 00:36:54.490
So you can see there's two rows
of content under top stories.

00:36:54.490 --> 00:36:59.590
You can see that there is more
content available on swipe

00:36:59.590 --> 00:37:00.800
because the images are cut off.

00:37:00.800 --> 00:37:03.310
And this is a very
common way of indicating

00:37:03.310 --> 00:37:07.300
that there is additional information
if you swipe from right to left.

00:37:07.300 --> 00:37:11.940
But there is also a link at
the bottom that says see more.

00:37:11.940 --> 00:37:15.060
And that same content, when you
activate that link, is shown

00:37:15.060 --> 00:37:19.770
in a linear fashion on one page,
if you go to that see more page.

00:37:21.230 --> 00:37:23.200
This is another example here.

00:37:23.200 --> 00:37:25.530
So this is the Google Weather.

00:37:25.530 --> 00:37:29.000
And when you view the weather
on Google, you can select

00:37:29.000 --> 00:37:33.660
and drag the slider to determine
the weather at a certain time

00:37:33.660 --> 00:37:34.710
during the day.

00:37:34.710 --> 00:37:41.500
However, those times, these 7am,
7:30, et cetera, they are also links.

00:37:41.500 --> 00:37:48.680
So you can actually get a general
idea by tapping instead of dragging

00:37:48.680 --> 00:37:49.680
as well.

00:37:52.220 --> 00:37:57.270
Step five is, mobile assistive
technology and feature support.

00:37:57.270 --> 00:38:01.820
So make sure that all actual
items and content can be accessed

00:38:01.820 --> 00:38:05.160
and activated by the following
assistive technologies,

00:38:05.160 --> 00:38:07.560
or when the following
feature is enabled.

00:38:07.560 --> 00:38:09.267
So these are the
assistive technologies

00:38:09.268 --> 00:38:10.590
and features that we recommend

00:38:10.590 --> 00:38:13.990
that you test with,
with the guidelines as they are now.

00:38:13.990 --> 00:38:18.010
For Android, that is TalkBack,
keyboard, keyboard and switch,

00:38:18.010 --> 00:38:22.350
magnification, remove animations,
invert colors, grayscale,

00:38:22.350 --> 00:38:25.860
increase display size,
increase text size with Chrome,

00:38:25.860 --> 00:38:29.010
and simplified view on Chrome.

00:38:29.010 --> 00:38:33.580
For iPhone and also iPad,
it's Voiceover, keyboard, keyboard

00:38:33.580 --> 00:38:37.300
and switch, zoom, reduce motion,
invert colors, grayscale,

00:38:37.300 --> 00:38:38.210
and [Inaudible 00:38:38]

00:38:38.210 --> 00:38:40.200
view, on mobile site only.

00:38:40.200 --> 00:38:43.850
And as I said, you need to test
those things on iPad as well.

00:38:43.850 --> 00:38:46.970
Now I'm just going to show you
an example of a Voiceover error

00:38:46.970 --> 00:38:48.450
that you could find.

00:38:48.450 --> 00:38:52.530
So the requirement, once
again, is all actionable items

00:38:52.530 --> 00:38:57.670
and content can be accessed and
activated by Voiceover on iOS.

00:38:57.670 --> 00:39:01.760
Be aware that Voiceover users
include, as you would expect,

00:39:01.760 --> 00:39:06.140
blind users, but also low vision
users, and also users with cognitive

00:39:06.140 --> 00:39:07.450
and learning difficulties.

00:39:07.450 --> 00:39:10.930
So it's not just about people
who can't see the screen.

00:39:10.930 --> 00:39:13.220
So this is a very common error.

00:39:13.220 --> 00:39:15.070
You can [Inaudible 00:39:13].

00:39:15.070 --> 00:39:19.590
Whoever put this example into
the methodology, the article,

00:39:19.590 --> 00:39:23.010
30 warning signs, when you're
dealing with someone able.

00:39:23.010 --> 00:39:25.880
Anyway, at the top of that,
you can actually share

00:39:25.880 --> 00:39:30.830
on various different social-media
networks: Facebook, Twitter,

00:39:30.830 --> 00:39:35.710
the much preferred previous
logo, YouTube and Pinterest,

00:39:35.710 --> 00:39:38.890
but they don't have
accessible names.

00:39:38.890 --> 00:39:42.660
So basically Voiceover reads
it as link, link, link, link.

00:39:44.120 --> 00:39:49.070
Another example here,
a bit more complex, is basically,

00:39:49.070 --> 00:39:52.520
activation doesn't move focus
to the next logical item.

00:39:52.520 --> 00:39:54.450
So you've got this crossword app.

00:39:54.450 --> 00:39:57.960
And when the TalkBack... This is
a TalkBack issue not Voiceover ...

00:39:57.960 --> 00:40:00.080
Is focused on an across clue.

00:40:00.080 --> 00:40:04.420
When you press enter on that
clue, you'd expect it to take you

00:40:04.420 --> 00:40:08.280
to that area on the crossword
so that you could fill it in.

00:40:08.280 --> 00:40:13.170
But instead, when you activate
the clue, it just swaps it

00:40:13.170 --> 00:40:16.850
from an across clue to a down clue.

00:40:16.850 --> 00:40:18.880
So you can see it just changes.

00:40:18.880 --> 00:40:22.360
So there's no real way to move
between the two, which is a bit more

00:40:22.360 --> 00:40:23.360
of a complex error.

00:40:24.860 --> 00:40:25.920
What's next?

00:40:25.920 --> 00:40:29.660
OK, so updates from WCAG 2.2,
whenever they get released.

00:40:29.660 --> 00:40:33.390
I must admit I actually
have not checked 2.2

00:40:33.390 --> 00:40:36.000
since I last ran this
presentation in June.

00:40:36.000 --> 00:40:40.170
So I apologize if these are incorrect
because they do change, it seems.

00:40:40.170 --> 00:40:44.540
But there are two additional
level A Success Criteria in 2.2,

00:40:44.540 --> 00:40:51.120
which is 3.26.6, consistent help
providing consistent help mechanisms.

00:40:51.120 --> 00:40:53.960
3.3.9, redundant entry.

00:40:53.960 --> 00:40:57.140
Information previously
entered is auto populated.

00:40:57.140 --> 00:41:03.880
From AA, the updates are
2.4.12, focus not obscured.

00:41:03.880 --> 00:41:06.600
The current keyboard
focus is not hidden.

00:41:06.600 --> 00:41:09.390
2.5.7, dragging movements.

00:41:09.390 --> 00:41:11.620
dragging as an
accessible alternative.

00:41:11.620 --> 00:41:16.290
2.5.8, target size minimum;
target has the adequate size.

00:41:16.290 --> 00:41:20.550
3.3.7, accessible authentication;
providing easy methods

00:41:20.550 --> 00:41:22.220
of authentication.

00:41:22.220 --> 00:41:27.540
For AAA, there are three
additional criteria: 2.4.12,

00:41:27.540 --> 00:41:30.020
focus not obscured, enhanced.

00:41:30.020 --> 00:41:32.600
The entire keyboard
focus is visible.

00:41:32.600 --> 00:41:35.680
2.4.13, focus appearance;

00:41:35.680 --> 00:41:39.330
ensuring the keyboard focus
indicator is visible to all.

00:41:39.330 --> 00:41:44.400
And 3.3 .8, accessible authentication
enhanced; providing easy methods

00:41:44.400 --> 00:41:46.080
of authentication.

00:41:46.080 --> 00:41:49.250
There's also some additional
assistive technologies

00:41:49.251 --> 00:41:50.530
and mobile features.

00:41:50.530 --> 00:41:53.910
So Voice Control is actually
fantastic for testing.

00:41:56.210 --> 00:42:00.260
So Voice Control is great for
testing if things have alternatives.

00:42:00.260 --> 00:42:03.120
But that's also something
that needs to be tested with.

00:42:03.120 --> 00:42:06.730
The increased tech size font
color from Reader view also needs

00:42:06.730 --> 00:42:07.360
to be included.

00:42:07.360 --> 00:42:10.120
And testing with a mouse,
because now you can add a mouse

00:42:10.120 --> 00:42:12.270
to things like an iPad.

00:42:12.270 --> 00:42:15.500
We also need to review
existing test cases.

00:42:15.500 --> 00:42:18.700
So the text-to-speech traps,
for example, were only

00:42:18.700 --> 00:42:20.090
in the native app methodology.

00:42:20.090 --> 00:42:24.700
However, now they've begun
to occur on mobile sites.

00:42:24.700 --> 00:42:29.050
We need to remove some assistive
technologies and mobile features.

00:42:29.050 --> 00:42:32.560
So certain types of tests seem
to generate the same results.

00:42:32.560 --> 00:42:36.950
So gray scale in iOS and Android,
color inversion in Android,

00:42:36.950 --> 00:42:40.980
and invert colors in iOS always
fail together or pass together.

00:42:40.980 --> 00:42:44.120
So you only really need to
test one of those things.

00:42:44.120 --> 00:42:47.050
Reduce motion on iOS
and remove animations

00:42:47.050 --> 00:42:50.120
in Android always fail
together or pass together.

00:42:50.120 --> 00:42:52.740
And classic invert
doesn't tend to provide

00:42:52.740 --> 00:42:55.750
any additional testing
information to smart invert.

00:42:57.020 --> 00:43:00.290
The next thing we need to do
is create an online resource.

00:43:00.290 --> 00:43:01.868
So currently these
are a word document,

00:43:01.869 --> 00:43:03.170
but of course it would be better

00:43:03.170 --> 00:43:08.040
to be a website, which is easily
searchable, easily updated,

00:43:08.040 --> 00:43:10.680
more likely to be used,
and more accessible.

00:43:10.680 --> 00:43:13.600
I'll fight anyone who
disagrees with me on that.

00:43:13.600 --> 00:43:17.080
So we are talking about
reconvening the committee.

00:43:17.080 --> 00:43:23.910
I have been talking about this for
a while, but we're working on it

00:43:23.910 --> 00:43:27.430
as quickly as we can,
just as we are with the captions.

00:43:27.430 --> 00:43:31.650
It's something that, you know, I have
to run a business at the same time.

00:43:31.650 --> 00:43:34.590
So if you are interested in
getting involved, though,

00:43:34.590 --> 00:43:42.590
please do email us, because we'll
put your details into a big document

00:43:42.920 --> 00:43:46.900
and then we'll contact you when
we do reconvene the committee.

00:43:46.900 --> 00:43:50.200
If you feel like you don't know
enough about mobile, trust me,

00:43:50.200 --> 00:43:53.320
if you're in this presentation,
you know enough about mobile.

00:43:53.320 --> 00:43:56.500
We didn't know very much about
mobile until we did this.

00:43:56.500 --> 00:43:58.820
Now we know lots because
we had to research it all.

00:43:58.820 --> 00:43:59.880
We had to figure it all out.

00:44:01.180 --> 00:44:04.300
So if you're interested,
please join us.

00:44:04.300 --> 00:44:07.170
Thank you for coming today.

00:44:07.170 --> 00:44:09.890
We don't have any time to
talk about our other products,

00:44:09.890 --> 00:44:12.490
but we have a whole bunch of
free products on the website.

00:44:12.490 --> 00:44:14.690
So please check them out.

00:44:14.690 --> 00:44:19.470
As I said, you can access this
presentation, not from that URL,

00:44:19.470 --> 00:44:20.970
but from this URL.

00:44:27.660 --> 00:44:32.810
And the actual guidelines
are available here.

00:44:32.810 --> 00:44:34.890
So now I will get to questions.

00:44:40.550 --> 00:44:44.420
Amber Hinds says: Given the
differences in accessibility

00:44:44.420 --> 00:44:48.900
for mobile apps and websites, what
do you think the line is for deciding

00:44:48.900 --> 00:44:52.290
if something should be built as
a web app versus a mobile app?

00:44:52.290 --> 00:44:55.990
Are there certain features that would
necessitate one versus the other?

00:44:55.990 --> 00:44:58.670
It's a really great question.

00:44:58.670 --> 00:45:06.670
I don't know if this is an
accessibility thing or not,

00:45:07.070 --> 00:45:10.790
but I actually think that
you need to be very careful

00:45:10.790 --> 00:45:13.520
about creating a native app because
it's something that people have

00:45:13.520 --> 00:45:14.720
to download.

00:45:14.720 --> 00:45:22.720
So I can imagine, for banking or
for insurance or for reading books

00:45:23.030 --> 00:45:25.910
or something very specific like
that, people are willing

00:45:25.910 --> 00:45:27.430
to download a native app.

00:45:27.430 --> 00:45:31.540
But if they just want to purchase
something from you or they just want

00:45:31.540 --> 00:45:35.130
to log in once to access what you
have, they probably don't want

00:45:35.130 --> 00:45:36.920
to actually download a native app.

00:45:36.920 --> 00:45:41.170
So that's from a kind of
usability perspective.

00:45:41.170 --> 00:45:45.290
From an accessibility perspective,
HTML is so much more accessible

00:45:45.290 --> 00:45:46.760
than anything else.

00:45:46.760 --> 00:45:52.500
And there are problems really with
making things really fully accessible

00:45:52.500 --> 00:45:57.220
in a native app on iOS and
Android at the same time.

00:45:57.220 --> 00:46:02.120
So without creating different
apps, it's just all complicated.

00:46:02.120 --> 00:46:04.900
So I'd say from an
accessibility perspective,

00:46:04.900 --> 00:46:06.900
a web app is usually
much more accessible.

00:46:06.900 --> 00:46:10.530
But if that's not suiting you,
then that doesn't suit you.

00:46:10.530 --> 00:46:12.030
And I think that
we've come far enough

00:46:12.030 --> 00:46:14.220
that native apps can
be pretty accessible.

00:46:16.750 --> 00:46:21.260
Anonymous attendee asks: Here
comes the dreaded budget question.

00:46:21.260 --> 00:46:24.010
How can we persuade lower-budget
clients that they should test

00:46:24.010 --> 00:46:26.400
with all devices?
That's an excellent question.

00:46:26.400 --> 00:46:31.490
If I knew the answer to that,
I would be wealthier [laughs]

00:46:31.490 --> 00:46:33.620
than I am.

00:46:38.830 --> 00:46:43.010
Basically, I would suggest
that what we intend to do,

00:46:43.010 --> 00:46:48.050
is we say we'll test with WCAG2, and
then there is this additional cost

00:46:48.050 --> 00:46:50.320
if you want us to test
with mobile devices.

00:46:50.320 --> 00:46:52.740
Now, they’ll say, Oh, well,
why should we test in mobile devices?

00:46:52.740 --> 00:46:55.690
And we can say,
Well, how many people

00:46:55.690 --> 00:46:58.560
on your site use a mobile
device to check it?

00:46:58.560 --> 00:47:00.690
And they'll look at their
analytics and go, Oh, my gosh,

00:47:00.690 --> 00:47:04.310
50% of our users are
on mobile devices.

00:47:04.310 --> 00:47:09.590
We need to test with them. So that's
perhaps probably the best option

00:47:09.590 --> 00:47:11.340
that I could give you.

00:47:13.550 --> 00:47:14.596
Anonymous attendee:

00:47:14.597 --> 00:47:17.460
Swiping and dragging are
really confusing with me.

00:47:17.460 --> 00:47:21.790
With Success Criterion 2.5,
wouldn't a carousel pass here?

00:47:21.790 --> 00:47:23.890
Save gesture is scrolling
down the screen,

00:47:23.890 --> 00:47:28.490
but would it fail the upcoming 2.5.7?
Gosh, oh my lord.

00:47:28.490 --> 00:47:34.460
I don't know the
upcoming 2.5.7 by number.

00:47:34.460 --> 00:47:40.590
So basically, swiping is swipe.

00:47:41.760 --> 00:47:44.480
And so that just moves
from one item to the next.

00:47:44.480 --> 00:47:47.760
Whereas dragging is where you
actually pick up something

00:47:47.760 --> 00:47:49.760
and then you drag it along.

00:47:49.760 --> 00:47:53.560
I think that's probably not
a very good explanation.

00:47:53.560 --> 00:48:01.360
But anonymous attendee, if you want
to email me or message me on Slack,

00:48:01.360 --> 00:48:05.080
I'll look into that in more
detail and I will answer you.

00:48:05.080 --> 00:48:07.890
And if I find it really interesting,
I might even write an article,

00:48:07.890 --> 00:48:09.780
and then you can
continue to be anonymous.

00:48:11.810 --> 00:48:13.700
Yohan Sales [phonetic]:

00:48:13.700 --> 00:48:18.400
Might be off topic,
but I want to know your thoughts on

00:48:18.400 --> 00:48:26.300
where do we start in having a PWA?
Does anyone know what PWA is?

00:48:26.300 --> 00:48:28.280
Oh, [Inaudible 00:48:36].

00:48:38.560 --> 00:48:39.560
Thank you, everyone.

00:48:41.620 --> 00:48:44.610
I have no idea.

00:48:46.300 --> 00:48:50.590
I hate to end on a question
that I can't answer,

00:48:50.590 --> 00:48:58.590
but I think that it's something that
is up to the WordPress Community.

00:48:58.960 --> 00:49:06.390
And unfortunately, it's probably
going to be something that...

00:49:06.390 --> 00:49:10.660
The WordPress has the problem
that a lot of organizations have,

00:49:10.660 --> 00:49:13.470
which is where you are
reliant on volunteers.

00:49:14.580 --> 00:49:16.740
So it can be very difficult.

00:49:16.740 --> 00:49:21.320
So I apologize that I
did not answer that.

00:49:22.760 --> 00:49:24.720
Anyone else got any questions?

00:49:25.740 --> 00:49:29.330
 SAMYUKTHA: Probably you might
have answered most of the questions,

00:49:29.330 --> 00:49:30.300
Gian.

00:49:30.300 --> 00:49:33.000
Thank you so much for
your valuable inputs.

00:49:33.000 --> 00:49:37.030
And it is a great session with
examples you have given, right?

00:49:37.030 --> 00:49:40.200
So it's a great session.

00:49:40.200 --> 00:49:43.250
Thank you so much, Gian.

00:49:43.250 --> 00:49:45.520
And thank you for attending
this session with Gian.

00:49:45.520 --> 00:49:48.440
You can continue with the
conversation in the chat

00:49:48.440 --> 00:49:55.950
or the social media using
#WPA11YDAY and #WPAD2023.

00:49:55.950 --> 00:50:02.680
We also appreciate if you go to THE
2023.wpaccessibility.day/feedback

00:50:02.680 --> 00:50:06.590
to provide anonymous feedback to
our speakers on their presentation,

00:50:06.590 --> 00:50:11.840
and you can enter to win a
T-shirt while you are there.

00:50:11.840 --> 00:50:16.070
Stay tuned for the next
talk: Beyond the Visible -

00:50:16.070 --> 00:50:20.630
Crafting Inclusive WordPress Events
for Those with Invisible Illnesses

00:50:20.630 --> 00:50:24.930
and Chronic Disabilities,
witj Birgit Olzem at 07:00 UTC.

00:50:26.160 --> 00:50:28.970
Don't forget to visit our sponsors
place to get virtual tracts

00:50:28.970 --> 00:50:31.950
and enter for a chance
to win great prizes.

00:50:31.950 --> 00:50:33.310
See you right after the break.

00:50:39.055 --> 00:50:43.689
 AMBER: Thank you to WordPress
Accessibility Day 2023 sponsors.

00:50:43.690 --> 00:50:46.520
Platinum Sponsor: Equalize Digital.

00:50:46.520 --> 00:50:49.300
Equalize Digital’s
Accessibility Checker Plugin

00:50:49.300 --> 00:50:52.050
is an automated
accessibility-scanning tool

00:50:52.050 --> 00:50:55.250
that helps WordPress websites
become and stay accessible.

00:50:56.500 --> 00:50:59.340
Platinum Sponsor: Gravity Forms.

00:50:59.340 --> 00:51:02.970
Gravity Forms is the professional
form builder that you need

00:51:02.970 --> 00:51:07.680
to create beautiful, powerful,
and accessible forms.

00:51:07.680 --> 00:51:14.690
Gold Sponsors: 20i., Deque,
Empire Caption Solutions, Pressable,

00:51:14.690 --> 00:51:15.790
and WP Engine.

00:51:17.340 --> 00:51:24.210
Silver Sponsors: Code Geek, Drake
Cooper, GoDaddy, Lone Rock Point,

00:51:24.210 --> 00:51:25.470
NerdPress.

00:51:25.470 --> 00:51:32.950
Overnight Website by Kinetic Iris,
Raiola Networks, A11y Collective,

00:51:32.950 --> 00:51:33.950
and The Blogsmith.

00:51:35.580 --> 00:51:41.000
Bronze Sponsors: AccessiCart,
GreenGeeks Web Hosting,

00:51:41.000 --> 00:51:52.749
Hall Analysis’ SEO Consulting,
HDC, ITX, IvyCat, Metabox,

00:51:52.750 --> 00:51:57.663
PixelChefs, Simply Schedule
Appointments, SiteGround,

00:51:57.664 --> 00:52:02.880
Termageddon, Underrepresented
In Tech, Weglot, and Yoast.